// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: jthealth/biz/subscription/v1/subscription_api.proto

package subscriptionv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for SubscriptionAPI service

func NewSubscriptionAPIEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for SubscriptionAPI service

type SubscriptionAPIService interface {
	//创建体质卡组
	CreatePhysiqueCardGroup(ctx context.Context, in *CreatePhysiqueCardGroupRequest, opts ...client.CallOption) (*CreatePhysiqueCardGroupResponse, error)
	//获取体质卡组列表
	GetPhysiqueCardGroupList(ctx context.Context, in *GetPhysiqueCardGroupListRequest, opts ...client.CallOption) (*GetPhysiqueCardGroupListResponse, error)
	//获取体质卡列表
	GetPhysiqueCardList(ctx context.Context, in *GetPhysiqueCardListRequest, opts ...client.CallOption) (*GetPhysiqueCardListResponse, error)
	// 获取用户增值服务信息
	GetUserVasInfo(ctx context.Context, in *GetUserVasInfoRequest, opts ...client.CallOption) (*GetUserVasInfoResponse, error)
}

type subscriptionAPIService struct {
	c    client.Client
	name string
}

func NewSubscriptionAPIService(name string, c client.Client) SubscriptionAPIService {
	return &subscriptionAPIService{
		c:    c,
		name: name,
	}
}

func (c *subscriptionAPIService) CreatePhysiqueCardGroup(ctx context.Context, in *CreatePhysiqueCardGroupRequest, opts ...client.CallOption) (*CreatePhysiqueCardGroupResponse, error) {
	req := c.c.NewRequest(c.name, "SubscriptionAPI.CreatePhysiqueCardGroup", in)
	out := new(CreatePhysiqueCardGroupResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subscriptionAPIService) GetPhysiqueCardGroupList(ctx context.Context, in *GetPhysiqueCardGroupListRequest, opts ...client.CallOption) (*GetPhysiqueCardGroupListResponse, error) {
	req := c.c.NewRequest(c.name, "SubscriptionAPI.GetPhysiqueCardGroupList", in)
	out := new(GetPhysiqueCardGroupListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subscriptionAPIService) GetPhysiqueCardList(ctx context.Context, in *GetPhysiqueCardListRequest, opts ...client.CallOption) (*GetPhysiqueCardListResponse, error) {
	req := c.c.NewRequest(c.name, "SubscriptionAPI.GetPhysiqueCardList", in)
	out := new(GetPhysiqueCardListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subscriptionAPIService) GetUserVasInfo(ctx context.Context, in *GetUserVasInfoRequest, opts ...client.CallOption) (*GetUserVasInfoResponse, error) {
	req := c.c.NewRequest(c.name, "SubscriptionAPI.GetUserVasInfo", in)
	out := new(GetUserVasInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SubscriptionAPI service

type SubscriptionAPIHandler interface {
	//创建体质卡组
	CreatePhysiqueCardGroup(context.Context, *CreatePhysiqueCardGroupRequest, *CreatePhysiqueCardGroupResponse) error
	//获取体质卡组列表
	GetPhysiqueCardGroupList(context.Context, *GetPhysiqueCardGroupListRequest, *GetPhysiqueCardGroupListResponse) error
	//获取体质卡列表
	GetPhysiqueCardList(context.Context, *GetPhysiqueCardListRequest, *GetPhysiqueCardListResponse) error
	// 获取用户增值服务信息
	GetUserVasInfo(context.Context, *GetUserVasInfoRequest, *GetUserVasInfoResponse) error
}

func RegisterSubscriptionAPIHandler(s server.Server, hdlr SubscriptionAPIHandler, opts ...server.HandlerOption) error {
	type subscriptionAPI interface {
		CreatePhysiqueCardGroup(ctx context.Context, in *CreatePhysiqueCardGroupRequest, out *CreatePhysiqueCardGroupResponse) error
		GetPhysiqueCardGroupList(ctx context.Context, in *GetPhysiqueCardGroupListRequest, out *GetPhysiqueCardGroupListResponse) error
		GetPhysiqueCardList(ctx context.Context, in *GetPhysiqueCardListRequest, out *GetPhysiqueCardListResponse) error
		GetUserVasInfo(ctx context.Context, in *GetUserVasInfoRequest, out *GetUserVasInfoResponse) error
	}
	type SubscriptionAPI struct {
		subscriptionAPI
	}
	h := &subscriptionAPIHandler{hdlr}
	return s.Handle(s.NewHandler(&SubscriptionAPI{h}, opts...))
}

type subscriptionAPIHandler struct {
	SubscriptionAPIHandler
}

func (h *subscriptionAPIHandler) CreatePhysiqueCardGroup(ctx context.Context, in *CreatePhysiqueCardGroupRequest, out *CreatePhysiqueCardGroupResponse) error {
	return h.SubscriptionAPIHandler.CreatePhysiqueCardGroup(ctx, in, out)
}

func (h *subscriptionAPIHandler) GetPhysiqueCardGroupList(ctx context.Context, in *GetPhysiqueCardGroupListRequest, out *GetPhysiqueCardGroupListResponse) error {
	return h.SubscriptionAPIHandler.GetPhysiqueCardGroupList(ctx, in, out)
}

func (h *subscriptionAPIHandler) GetPhysiqueCardList(ctx context.Context, in *GetPhysiqueCardListRequest, out *GetPhysiqueCardListResponse) error {
	return h.SubscriptionAPIHandler.GetPhysiqueCardList(ctx, in, out)
}

func (h *subscriptionAPIHandler) GetUserVasInfo(ctx context.Context, in *GetUserVasInfoRequest, out *GetUserVasInfoResponse) error {
	return h.SubscriptionAPIHandler.GetUserVasInfo(ctx, in, out)
}
