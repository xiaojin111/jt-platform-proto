// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: jthealth/biz/user/v1/user_api.proto

package userv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 手机号验证码登录请求
type SignInByPhoneCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 手机号
	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	// 验证码
	SmsCode string `protobuf:"bytes,2,opt,name=sms_code,json=smsCode,proto3" json:"sms_code,omitempty"`
}

func (x *SignInByPhoneCodeRequest) Reset() {
	*x = SignInByPhoneCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByPhoneCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByPhoneCodeRequest) ProtoMessage() {}

func (x *SignInByPhoneCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByPhoneCodeRequest.ProtoReflect.Descriptor instead.
func (*SignInByPhoneCodeRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{0}
}

func (x *SignInByPhoneCodeRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SignInByPhoneCodeRequest) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

// 手机号验证码登录响应
type SignInByPhoneCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role        string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	IsCompleted string `protobuf:"bytes,3,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
}

func (x *SignInByPhoneCodeResponse) Reset() {
	*x = SignInByPhoneCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByPhoneCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByPhoneCodeResponse) ProtoMessage() {}

func (x *SignInByPhoneCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByPhoneCodeResponse.ProtoReflect.Descriptor instead.
func (*SignInByPhoneCodeResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{1}
}

func (x *SignInByPhoneCodeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SignInByPhoneCodeResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SignInByPhoneCodeResponse) GetIsCompleted() string {
	if x != nil {
		return x.IsCompleted
	}
	return ""
}

//获取用户信息
type GetUserInfosByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserInfosByIdRequest) Reset() {
	*x = GetUserInfosByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfosByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfosByIdRequest) ProtoMessage() {}

func (x *GetUserInfosByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfosByIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfosByIdRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserInfosByIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserInfosByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl   string `protobuf:"bytes,1,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	AppKey      string `protobuf:"bytes,3,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email       string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UserId      string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsCompleted string `protobuf:"bytes,8,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	//微信号
	WxNumber string `protobuf:"bytes,9,opt,name=wx_number,json=wxNumber,proto3" json:"wx_number,omitempty"`
	//公司地址
	CompanyAddress string `protobuf:"bytes,10,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"`
	//法人
	LegalName string `protobuf:"bytes,11,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	//纳税号
	IdentificationNumber string `protobuf:"bytes,12,opt,name=identification_number,json=identificationNumber,proto3" json:"identification_number,omitempty"`
	//银行账号
	CardNumber string `protobuf:"bytes,13,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	//开户行
	AccountBank string `protobuf:"bytes,14,opt,name=account_bank,json=accountBank,proto3" json:"account_bank,omitempty"`
	//营业执照
	BusinessLicense string `protobuf:"bytes,15,opt,name=business_license,json=businessLicense,proto3" json:"business_license,omitempty"`
	//食品许可证
	FoodLicense string `protobuf:"bytes,16,opt,name=food_license,json=foodLicense,proto3" json:"food_license,omitempty"`
	//身份证正面
	IdCardFront string `protobuf:"bytes,17,opt,name=id_card_front,json=idCardFront,proto3" json:"id_card_front,omitempty"`
	//身份证反面
	IdCardReverse string `protobuf:"bytes,18,opt,name=id_card_reverse,json=idCardReverse,proto3" json:"id_card_reverse,omitempty"`
	//合同编号
	ContractNumber string `protobuf:"bytes,19,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	//开放时间
	StartTime *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	//账号
	UserNumber string `protobuf:"bytes,22,opt,name=user_number,json=userNumber,proto3" json:"user_number,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,23,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *GetUserInfosByIdResponse) Reset() {
	*x = GetUserInfosByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfosByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfosByIdResponse) ProtoMessage() {}

func (x *GetUserInfosByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfosByIdResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfosByIdResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserInfosByIdResponse) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetIsCompleted() string {
	if x != nil {
		return x.IsCompleted
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetWxNumber() string {
	if x != nil {
		return x.WxNumber
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetIdentificationNumber() string {
	if x != nil {
		return x.IdentificationNumber
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetAccountBank() string {
	if x != nil {
		return x.AccountBank
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetBusinessLicense() string {
	if x != nil {
		return x.BusinessLicense
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetFoodLicense() string {
	if x != nil {
		return x.FoodLicense
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetIdCardFront() string {
	if x != nil {
		return x.IdCardFront
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetIdCardReverse() string {
	if x != nil {
		return x.IdCardReverse
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetContractNumber() string {
	if x != nil {
		return x.ContractNumber
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetUserInfosByIdResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetUserInfosByIdResponse) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *GetUserInfosByIdResponse) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

//UpdateUserInfos  更改用户信息
type UpdateUserInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AvatarUrl string `protobuf:"bytes,2,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	UserName  string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	SmsCode   string `protobuf:"bytes,5,opt,name=sms_code,json=smsCode,proto3" json:"sms_code,omitempty"`
	Email     string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UpdateUserInfosRequest) Reset() {
	*x = UpdateUserInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfosRequest) ProtoMessage() {}

func (x *UpdateUserInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfosRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserInfosRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserInfosRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserInfosRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UpdateUserInfosRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserInfosRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateUserInfosRequest) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

func (x *UpdateUserInfosRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpdateUserInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AvatarUrl string `protobuf:"bytes,2,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	UserName  string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UpdateUserInfosResponse) Reset() {
	*x = UpdateUserInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfosResponse) ProtoMessage() {}

func (x *UpdateUserInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfosResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserInfosResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserInfosResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserInfosResponse) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UpdateUserInfosResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserInfosResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateUserInfosResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

//SignInByPassWord 账号密码登录
type SignInByPassWordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNumber string `protobuf:"bytes,1,opt,name=user_number,json=userNumber,proto3" json:"user_number,omitempty"`
	PassWord   string `protobuf:"bytes,2,opt,name=pass_word,json=passWord,proto3" json:"pass_word,omitempty"`
}

func (x *SignInByPassWordRequest) Reset() {
	*x = SignInByPassWordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByPassWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByPassWordRequest) ProtoMessage() {}

func (x *SignInByPassWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByPassWordRequest.ProtoReflect.Descriptor instead.
func (*SignInByPassWordRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{6}
}

func (x *SignInByPassWordRequest) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *SignInByPassWordRequest) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

type SignInByPassWordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role   string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *SignInByPassWordResponse) Reset() {
	*x = SignInByPassWordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByPassWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByPassWordResponse) ProtoMessage() {}

func (x *SignInByPassWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByPassWordResponse.ProtoReflect.Descriptor instead.
func (*SignInByPassWordResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{7}
}

func (x *SignInByPassWordResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SignInByPassWordResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

//应用申请
type ApplyApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LogoUrl string `protobuf:"bytes,2,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	AppName string `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppType string `protobuf:"bytes,4,opt,name=app_type,json=appType,proto3" json:"app_type,omitempty"`
}

func (x *ApplyApplicationRequest) Reset() {
	*x = ApplyApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyApplicationRequest) ProtoMessage() {}

func (x *ApplyApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyApplicationRequest.ProtoReflect.Descriptor instead.
func (*ApplyApplicationRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{8}
}

func (x *ApplyApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ApplyApplicationRequest) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ApplyApplicationRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplyApplicationRequest) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

type ApplyApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ApplyApplicationResponse) Reset() {
	*x = ApplyApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyApplicationResponse) ProtoMessage() {}

func (x *ApplyApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyApplicationResponse.ProtoReflect.Descriptor instead.
func (*ApplyApplicationResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{9}
}

func (x *ApplyApplicationResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

//获取应用列表
type GetApplicationInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetApplicationInfoRequest) Reset() {
	*x = GetApplicationInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationInfoRequest) ProtoMessage() {}

func (x *GetApplicationInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApplicationInfoRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetApplicationInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetApplicationInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ApplicationList `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetApplicationInfoResponse) Reset() {
	*x = GetApplicationInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationInfoResponse) ProtoMessage() {}

func (x *GetApplicationInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApplicationInfoResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetApplicationInfoResponse) GetList() []*ApplicationList {
	if x != nil {
		return x.List
	}
	return nil
}

type ApplicationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string        `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	AppLogo       string        `protobuf:"bytes,2,opt,name=app_logo,json=appLogo,proto3" json:"app_logo,omitempty"`
	AppName       string        `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppStatus     string        `protobuf:"bytes,4,opt,name=app_status,json=appStatus,proto3" json:"app_status,omitempty"`
	Roles         []*AppRoleMsg `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	AppId         string        `protobuf:"bytes,6,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret     string        `protobuf:"bytes,7,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
}

func (x *ApplicationList) Reset() {
	*x = ApplicationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationList) ProtoMessage() {}

func (x *ApplicationList) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationList.ProtoReflect.Descriptor instead.
func (*ApplicationList) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{12}
}

func (x *ApplicationList) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ApplicationList) GetAppLogo() string {
	if x != nil {
		return x.AppLogo
	}
	return ""
}

func (x *ApplicationList) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationList) GetAppStatus() string {
	if x != nil {
		return x.AppStatus
	}
	return ""
}

func (x *ApplicationList) GetRoles() []*AppRoleMsg {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ApplicationList) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ApplicationList) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

type AppRoleMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AppRoleMsg) Reset() {
	*x = AppRoleMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRoleMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRoleMsg) ProtoMessage() {}

func (x *AppRoleMsg) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRoleMsg.ProtoReflect.Descriptor instead.
func (*AppRoleMsg) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{13}
}

func (x *AppRoleMsg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//单个应用详情
type GetApplicationDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *GetApplicationDetailsRequest) Reset() {
	*x = GetApplicationDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationDetailsRequest) ProtoMessage() {}

func (x *GetApplicationDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetApplicationDetailsRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetApplicationDetailsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type GetApplicationDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppLogo   string `protobuf:"bytes,1,opt,name=app_logo,json=appLogo,proto3" json:"app_logo,omitempty"`
	AppName   string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppStatus string `protobuf:"bytes,3,opt,name=app_status,json=appStatus,proto3" json:"app_status,omitempty"`
	AppId     string `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret string `protobuf:"bytes,5,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
}

func (x *GetApplicationDetailsResponse) Reset() {
	*x = GetApplicationDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationDetailsResponse) ProtoMessage() {}

func (x *GetApplicationDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetApplicationDetailsResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetApplicationDetailsResponse) GetAppLogo() string {
	if x != nil {
		return x.AppLogo
	}
	return ""
}

func (x *GetApplicationDetailsResponse) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *GetApplicationDetailsResponse) GetAppStatus() string {
	if x != nil {
		return x.AppStatus
	}
	return ""
}

func (x *GetApplicationDetailsResponse) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetApplicationDetailsResponse) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

//创建用户档案
type CreatedUserProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//企业名称
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	//微信号
	WxNumber string `protobuf:"bytes,4,opt,name=wx_number,json=wxNumber,proto3" json:"wx_number,omitempty"`
	//公司地址
	CompanyAddress string `protobuf:"bytes,5,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"`
	//法人
	LegalName string `protobuf:"bytes,6,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	//纳税号
	IdentificationNumber string `protobuf:"bytes,7,opt,name=identification_number,json=identificationNumber,proto3" json:"identification_number,omitempty"`
	//银行账号
	CardNumber string `protobuf:"bytes,8,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	//开户行
	AccountBank string `protobuf:"bytes,9,opt,name=account_bank,json=accountBank,proto3" json:"account_bank,omitempty"`
	//营业执照
	BusinessLicense string `protobuf:"bytes,10,opt,name=business_license,json=businessLicense,proto3" json:"business_license,omitempty"`
	//食品许可证
	FoodLicense string `protobuf:"bytes,11,opt,name=food_license,json=foodLicense,proto3" json:"food_license,omitempty"`
	//身份证正面
	IdCardFront string `protobuf:"bytes,12,opt,name=id_card_front,json=idCardFront,proto3" json:"id_card_front,omitempty"`
	//身份证反面
	IdCardReverse string `protobuf:"bytes,13,opt,name=id_card_reverse,json=idCardReverse,proto3" json:"id_card_reverse,omitempty"`
	//手机号
	Phone string `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,15,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	//合同编号
	ContractNumber string `protobuf:"bytes,19,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	//开放时间
	StartTime int64 `protobuf:"varint,20,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	//结束时间
	EndTime int64 `protobuf:"varint,21,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	//是否修改
	IsUpdated bool `protobuf:"varint,22,opt,name=is_updated,json=isUpdated,proto3" json:"is_updated,omitempty"`
}

func (x *CreatedUserProfileRequest) Reset() {
	*x = CreatedUserProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedUserProfileRequest) ProtoMessage() {}

func (x *CreatedUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedUserProfileRequest.ProtoReflect.Descriptor instead.
func (*CreatedUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{16}
}

func (x *CreatedUserProfileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetWxNumber() string {
	if x != nil {
		return x.WxNumber
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetIdentificationNumber() string {
	if x != nil {
		return x.IdentificationNumber
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetAccountBank() string {
	if x != nil {
		return x.AccountBank
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetBusinessLicense() string {
	if x != nil {
		return x.BusinessLicense
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetFoodLicense() string {
	if x != nil {
		return x.FoodLicense
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetIdCardFront() string {
	if x != nil {
		return x.IdCardFront
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetIdCardReverse() string {
	if x != nil {
		return x.IdCardReverse
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetContractNumber() string {
	if x != nil {
		return x.ContractNumber
	}
	return ""
}

func (x *CreatedUserProfileRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CreatedUserProfileRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CreatedUserProfileRequest) GetIsUpdated() bool {
	if x != nil {
		return x.IsUpdated
	}
	return false
}

type CreatedUserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreatedUserProfileResponse) Reset() {
	*x = CreatedUserProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedUserProfileResponse) ProtoMessage() {}

func (x *CreatedUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedUserProfileResponse.ProtoReflect.Descriptor instead.
func (*CreatedUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{17}
}

func (x *CreatedUserProfileResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ApplyFeatureAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FeatureType   string `protobuf:"bytes,2,opt,name=feature_type,json=featureType,proto3" json:"feature_type,omitempty"`
	ApplicationId string `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *ApplyFeatureAuditRequest) Reset() {
	*x = ApplyFeatureAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyFeatureAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyFeatureAuditRequest) ProtoMessage() {}

func (x *ApplyFeatureAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyFeatureAuditRequest.ProtoReflect.Descriptor instead.
func (*ApplyFeatureAuditRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{18}
}

func (x *ApplyFeatureAuditRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ApplyFeatureAuditRequest) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *ApplyFeatureAuditRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type ApplyFeatureAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ApplyFeatureAuditResponse) Reset() {
	*x = ApplyFeatureAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyFeatureAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyFeatureAuditResponse) ProtoMessage() {}

func (x *ApplyFeatureAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyFeatureAuditResponse.ProtoReflect.Descriptor instead.
func (*ApplyFeatureAuditResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{19}
}

func (x *ApplyFeatureAuditResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

//GetUserInfosList 获取用户信息列表
type GetUserInfosListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum    int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize   int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SearchName string `protobuf:"bytes,4,opt,name=search_name,json=searchName,proto3" json:"search_name,omitempty"`
}

func (x *GetUserInfosListRequest) Reset() {
	*x = GetUserInfosListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfosListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfosListRequest) ProtoMessage() {}

func (x *GetUserInfosListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfosListRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfosListRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserInfosListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetUserInfosListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserInfosListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfosListRequest) GetSearchName() string {
	if x != nil {
		return x.SearchName
	}
	return ""
}

type GetUserInfosListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	//用户列表
	List []*UserMsg `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserInfosListResponse) Reset() {
	*x = GetUserInfosListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfosListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfosListResponse) ProtoMessage() {}

func (x *GetUserInfosListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfosListResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfosListResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserInfosListResponse) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetUserInfosListResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserInfosListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserInfosListResponse) GetList() []*UserMsg {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//企业名称
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	//姓名/法人
	LegalName string `protobuf:"bytes,3,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,4,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	//合同编号
	ContractNumber string `protobuf:"bytes,5,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	//状态
	Status int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	//开放期限
	OpenTime string `protobuf:"bytes,7,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	//小阶数量
	DeviceNum int32  `protobuf:"varint,8,opt,name=device_num,json=deviceNum,proto3" json:"device_num,omitempty"`
	AppKey    string `protobuf:"bytes,9,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
}

func (x *UserMsg) Reset() {
	*x = UserMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMsg) ProtoMessage() {}

func (x *UserMsg) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMsg.ProtoReflect.Descriptor instead.
func (*UserMsg) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{22}
}

func (x *UserMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserMsg) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserMsg) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *UserMsg) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *UserMsg) GetContractNumber() string {
	if x != nil {
		return x.ContractNumber
	}
	return ""
}

func (x *UserMsg) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserMsg) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *UserMsg) GetDeviceNum() int32 {
	if x != nil {
		return x.DeviceNum
	}
	return 0
}

func (x *UserMsg) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

//获取审核列表
type GetFeatureAuditListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum     int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize    int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuditStatus string `protobuf:"bytes,4,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
}

func (x *GetFeatureAuditListRequest) Reset() {
	*x = GetFeatureAuditListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureAuditListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureAuditListRequest) ProtoMessage() {}

func (x *GetFeatureAuditListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureAuditListRequest.ProtoReflect.Descriptor instead.
func (*GetFeatureAuditListRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{23}
}

func (x *GetFeatureAuditListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetFeatureAuditListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFeatureAuditListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFeatureAuditListRequest) GetAuditStatus() string {
	if x != nil {
		return x.AuditStatus
	}
	return ""
}

type GetFeatureAuditListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	//用户列表
	List []*FeatureAuditMsg `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetFeatureAuditListResponse) Reset() {
	*x = GetFeatureAuditListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureAuditListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureAuditListResponse) ProtoMessage() {}

func (x *GetFeatureAuditListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureAuditListResponse.ProtoReflect.Descriptor instead.
func (*GetFeatureAuditListResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetFeatureAuditListResponse) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetFeatureAuditListResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFeatureAuditListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetFeatureAuditListResponse) GetList() []*FeatureAuditMsg {
	if x != nil {
		return x.List
	}
	return nil
}

type FeatureAuditMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureAuditId string `protobuf:"bytes,5,opt,name=feature_audit_id,json=featureAuditId,proto3" json:"feature_audit_id,omitempty"`
	UserName       string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	FeatureType    string `protobuf:"bytes,2,opt,name=feature_type,json=featureType,proto3" json:"feature_type,omitempty"`
	Status         string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt      string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UserType       string `protobuf:"bytes,6,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	UserId         string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FeatureAuditMsg) Reset() {
	*x = FeatureAuditMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureAuditMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureAuditMsg) ProtoMessage() {}

func (x *FeatureAuditMsg) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureAuditMsg.ProtoReflect.Descriptor instead.
func (*FeatureAuditMsg) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{25}
}

func (x *FeatureAuditMsg) GetFeatureAuditId() string {
	if x != nil {
		return x.FeatureAuditId
	}
	return ""
}

func (x *FeatureAuditMsg) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FeatureAuditMsg) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *FeatureAuditMsg) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FeatureAuditMsg) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FeatureAuditMsg) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *FeatureAuditMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//应用功能审核
type UpdateFeatureAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureAuditId string `protobuf:"bytes,1,opt,name=feature_audit_id,json=featureAuditId,proto3" json:"feature_audit_id,omitempty"`
	//状态 1-待审核 2-审核通过 3-拒绝
	Status       string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	DenialReason string `protobuf:"bytes,3,opt,name=denial_reason,json=denialReason,proto3" json:"denial_reason,omitempty"`
}

func (x *UpdateFeatureAuditRequest) Reset() {
	*x = UpdateFeatureAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeatureAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeatureAuditRequest) ProtoMessage() {}

func (x *UpdateFeatureAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeatureAuditRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeatureAuditRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateFeatureAuditRequest) GetFeatureAuditId() string {
	if x != nil {
		return x.FeatureAuditId
	}
	return ""
}

func (x *UpdateFeatureAuditRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateFeatureAuditRequest) GetDenialReason() string {
	if x != nil {
		return x.DenialReason
	}
	return ""
}

type UpdateFeatureAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeatureAuditResponse) Reset() {
	*x = UpdateFeatureAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeatureAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeatureAuditResponse) ProtoMessage() {}

func (x *UpdateFeatureAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeatureAuditResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeatureAuditResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{27}
}

//重置app_secret
type RestAppSecretByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *RestAppSecretByIdRequest) Reset() {
	*x = RestAppSecretByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestAppSecretByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestAppSecretByIdRequest) ProtoMessage() {}

func (x *RestAppSecretByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestAppSecretByIdRequest.ProtoReflect.Descriptor instead.
func (*RestAppSecretByIdRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{28}
}

func (x *RestAppSecretByIdRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type RestAppSecretByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppSecret string `protobuf:"bytes,1,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
}

func (x *RestAppSecretByIdResponse) Reset() {
	*x = RestAppSecretByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestAppSecretByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestAppSecretByIdResponse) ProtoMessage() {}

func (x *RestAppSecretByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestAppSecretByIdResponse.ProtoReflect.Descriptor instead.
func (*RestAppSecretByIdResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{29}
}

func (x *RestAppSecretByIdResponse) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

//获取消息通知请求
type GetNotifyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetNotifyListRequest) Reset() {
	*x = GetNotifyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyListRequest) ProtoMessage() {}

func (x *GetNotifyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyListRequest.ProtoReflect.Descriptor instead.
func (*GetNotifyListRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{30}
}

func (x *GetNotifyListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetNotifyListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNotifyListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//获取消息通知响应
type GetNotifyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	//用户列表
	List []*NotifyMsg `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetNotifyListResponse) Reset() {
	*x = GetNotifyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyListResponse) ProtoMessage() {}

func (x *GetNotifyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyListResponse.ProtoReflect.Descriptor instead.
func (*GetNotifyListResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{31}
}

func (x *GetNotifyListResponse) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetNotifyListResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNotifyListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetNotifyListResponse) GetList() []*NotifyMsg {
	if x != nil {
		return x.List
	}
	return nil
}

type NotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content      string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	DenialReason string `protobuf:"bytes,2,opt,name=denial_reason,json=denialReason,proto3" json:"denial_reason,omitempty"`
}

func (x *NotifyMsg) Reset() {
	*x = NotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMsg) ProtoMessage() {}

func (x *NotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMsg.ProtoReflect.Descriptor instead.
func (*NotifyMsg) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{32}
}

func (x *NotifyMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotifyMsg) GetDenialReason() string {
	if x != nil {
		return x.DenialReason
	}
	return ""
}

// 获取用户档案请求
type GetUserProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户档案ID
	UserProfileId string `protobuf:"bytes,1,opt,name=user_profile_id,json=userProfileId,proto3" json:"user_profile_id,omitempty"`
}

func (x *GetUserProfileRequest) Reset() {
	*x = GetUserProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileRequest) ProtoMessage() {}

func (x *GetUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileRequest.ProtoReflect.Descriptor instead.
func (*GetUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{33}
}

func (x *GetUserProfileRequest) GetUserProfileId() string {
	if x != nil {
		return x.UserProfileId
	}
	return ""
}

// 获取用户档案响应.
type GetUserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户档案信息
	Profile *UserProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetUserProfileResponse) Reset() {
	*x = GetUserProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileResponse) ProtoMessage() {}

func (x *GetUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileResponse.ProtoReflect.Descriptor instead.
func (*GetUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{34}
}

func (x *GetUserProfileResponse) GetProfile() *UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// 提交用户档案请求
type SubmitUserProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户档案信息
	Profile *UserProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *SubmitUserProfileRequest) Reset() {
	*x = SubmitUserProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitUserProfileRequest) ProtoMessage() {}

func (x *SubmitUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitUserProfileRequest.ProtoReflect.Descriptor instead.
func (*SubmitUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{35}
}

func (x *SubmitUserProfileRequest) GetProfile() *UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// 提交用户档案响应
type SubmitUserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 档案ID
	UserProfileId string `protobuf:"bytes,1,opt,name=user_profile_id,json=userProfileId,proto3" json:"user_profile_id,omitempty"`
}

func (x *SubmitUserProfileResponse) Reset() {
	*x = SubmitUserProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitUserProfileResponse) ProtoMessage() {}

func (x *SubmitUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitUserProfileResponse.ProtoReflect.Descriptor instead.
func (*SubmitUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{36}
}

func (x *SubmitUserProfileResponse) GetUserProfileId() string {
	if x != nil {
		return x.UserProfileId
	}
	return ""
}

// UserProfile 用户档案.
type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 档案ID
	UserProfileId string `protobuf:"bytes,1,opt,name=user_profile_id,json=userProfileId,proto3" json:"user_profile_id,omitempty"`
	// 昵称
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	//昵称首字母
	NicknameInitial string `protobuf:"bytes,8,opt,name=nickname_initial,json=nicknameInitial,proto3" json:"nickname_initial,omitempty"`
	// 生日
	Birthday int64 `protobuf:"varint,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// 测量手 0 无效的手 1 未设置 2 左手 3 右手
	Hand int32 `protobuf:"varint,4,opt,name=hand,proto3" json:"hand,omitempty"`
	// 用户性别 0 无效的性别 1 未设置 2 男 3 女
	Gender int32 `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	// 身高 cm
	Height int32 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	// 体重 kg
	Weight int32 `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	//客户id
	ClientId string `protobuf:"bytes,9,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_user_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP(), []int{37}
}

func (x *UserProfile) GetUserProfileId() string {
	if x != nil {
		return x.UserProfileId
	}
	return ""
}

func (x *UserProfile) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserProfile) GetNicknameInitial() string {
	if x != nil {
		return x.NicknameInitial
	}
	return ""
}

func (x *UserProfile) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *UserProfile) GetHand() int32 {
	if x != nil {
		return x.Hand
	}
	return 0
}

func (x *UserProfile) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserProfile) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UserProfile) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UserProfile) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

var File_jthealth_biz_user_v1_user_api_proto protoreflect.FileDescriptor

var file_jthealth_biz_user_v1_user_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x18,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6b, 0x0a, 0x19, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc7, 0x06, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e,
	0x6b, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6d,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x57, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72,
	0x64, 0x22, 0x47, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x32, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x20, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x94, 0x05, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12,
	0x29, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x34,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x7d, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x82, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x41, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73,
	0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x18, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x43, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xde, 0x0e,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x12, 0x74, 0x0a, 0x11, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e,
	0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x71, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x2d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62,
	0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2c, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6a,
	0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x71, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x6a, 0x74, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x2e, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x2e,
	0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x2e, 0x2e, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62,
	0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x2f,
	0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x2e,
	0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6a, 0x74, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x2e,
	0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x9d,
	0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x6b, 0x65, 0x6a, 0x69, 0x2f, 0x6a,
	0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6a,
	0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4a, 0x42, 0x55,
	0xaa, 0x02, 0x14, 0x4a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x42, 0x69, 0x7a, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x4a, 0x74, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5c, 0x42, 0x69, 0x7a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jthealth_biz_user_v1_user_api_proto_rawDescOnce sync.Once
	file_jthealth_biz_user_v1_user_api_proto_rawDescData = file_jthealth_biz_user_v1_user_api_proto_rawDesc
)

func file_jthealth_biz_user_v1_user_api_proto_rawDescGZIP() []byte {
	file_jthealth_biz_user_v1_user_api_proto_rawDescOnce.Do(func() {
		file_jthealth_biz_user_v1_user_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_jthealth_biz_user_v1_user_api_proto_rawDescData)
	})
	return file_jthealth_biz_user_v1_user_api_proto_rawDescData
}

var file_jthealth_biz_user_v1_user_api_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_jthealth_biz_user_v1_user_api_proto_goTypes = []interface{}{
	(*SignInByPhoneCodeRequest)(nil),      // 0: jthealth.biz.user.v1.SignInByPhoneCodeRequest
	(*SignInByPhoneCodeResponse)(nil),     // 1: jthealth.biz.user.v1.SignInByPhoneCodeResponse
	(*GetUserInfosByIdRequest)(nil),       // 2: jthealth.biz.user.v1.GetUserInfosByIdRequest
	(*GetUserInfosByIdResponse)(nil),      // 3: jthealth.biz.user.v1.GetUserInfosByIdResponse
	(*UpdateUserInfosRequest)(nil),        // 4: jthealth.biz.user.v1.UpdateUserInfosRequest
	(*UpdateUserInfosResponse)(nil),       // 5: jthealth.biz.user.v1.UpdateUserInfosResponse
	(*SignInByPassWordRequest)(nil),       // 6: jthealth.biz.user.v1.SignInByPassWordRequest
	(*SignInByPassWordResponse)(nil),      // 7: jthealth.biz.user.v1.SignInByPassWordResponse
	(*ApplyApplicationRequest)(nil),       // 8: jthealth.biz.user.v1.ApplyApplicationRequest
	(*ApplyApplicationResponse)(nil),      // 9: jthealth.biz.user.v1.ApplyApplicationResponse
	(*GetApplicationInfoRequest)(nil),     // 10: jthealth.biz.user.v1.GetApplicationInfoRequest
	(*GetApplicationInfoResponse)(nil),    // 11: jthealth.biz.user.v1.GetApplicationInfoResponse
	(*ApplicationList)(nil),               // 12: jthealth.biz.user.v1.ApplicationList
	(*AppRoleMsg)(nil),                    // 13: jthealth.biz.user.v1.AppRoleMsg
	(*GetApplicationDetailsRequest)(nil),  // 14: jthealth.biz.user.v1.GetApplicationDetailsRequest
	(*GetApplicationDetailsResponse)(nil), // 15: jthealth.biz.user.v1.GetApplicationDetailsResponse
	(*CreatedUserProfileRequest)(nil),     // 16: jthealth.biz.user.v1.CreatedUserProfileRequest
	(*CreatedUserProfileResponse)(nil),    // 17: jthealth.biz.user.v1.CreatedUserProfileResponse
	(*ApplyFeatureAuditRequest)(nil),      // 18: jthealth.biz.user.v1.ApplyFeatureAuditRequest
	(*ApplyFeatureAuditResponse)(nil),     // 19: jthealth.biz.user.v1.ApplyFeatureAuditResponse
	(*GetUserInfosListRequest)(nil),       // 20: jthealth.biz.user.v1.GetUserInfosListRequest
	(*GetUserInfosListResponse)(nil),      // 21: jthealth.biz.user.v1.GetUserInfosListResponse
	(*UserMsg)(nil),                       // 22: jthealth.biz.user.v1.UserMsg
	(*GetFeatureAuditListRequest)(nil),    // 23: jthealth.biz.user.v1.GetFeatureAuditListRequest
	(*GetFeatureAuditListResponse)(nil),   // 24: jthealth.biz.user.v1.GetFeatureAuditListResponse
	(*FeatureAuditMsg)(nil),               // 25: jthealth.biz.user.v1.FeatureAuditMsg
	(*UpdateFeatureAuditRequest)(nil),     // 26: jthealth.biz.user.v1.UpdateFeatureAuditRequest
	(*UpdateFeatureAuditResponse)(nil),    // 27: jthealth.biz.user.v1.UpdateFeatureAuditResponse
	(*RestAppSecretByIdRequest)(nil),      // 28: jthealth.biz.user.v1.RestAppSecretByIdRequest
	(*RestAppSecretByIdResponse)(nil),     // 29: jthealth.biz.user.v1.RestAppSecretByIdResponse
	(*GetNotifyListRequest)(nil),          // 30: jthealth.biz.user.v1.GetNotifyListRequest
	(*GetNotifyListResponse)(nil),         // 31: jthealth.biz.user.v1.GetNotifyListResponse
	(*NotifyMsg)(nil),                     // 32: jthealth.biz.user.v1.NotifyMsg
	(*GetUserProfileRequest)(nil),         // 33: jthealth.biz.user.v1.GetUserProfileRequest
	(*GetUserProfileResponse)(nil),        // 34: jthealth.biz.user.v1.GetUserProfileResponse
	(*SubmitUserProfileRequest)(nil),      // 35: jthealth.biz.user.v1.SubmitUserProfileRequest
	(*SubmitUserProfileResponse)(nil),     // 36: jthealth.biz.user.v1.SubmitUserProfileResponse
	(*UserProfile)(nil),                   // 37: jthealth.biz.user.v1.UserProfile
	(*timestamppb.Timestamp)(nil),         // 38: google.protobuf.Timestamp
}
var file_jthealth_biz_user_v1_user_api_proto_depIdxs = []int32{
	38, // 0: jthealth.biz.user.v1.GetUserInfosByIdResponse.start_time:type_name -> google.protobuf.Timestamp
	38, // 1: jthealth.biz.user.v1.GetUserInfosByIdResponse.end_time:type_name -> google.protobuf.Timestamp
	12, // 2: jthealth.biz.user.v1.GetApplicationInfoResponse.list:type_name -> jthealth.biz.user.v1.ApplicationList
	13, // 3: jthealth.biz.user.v1.ApplicationList.roles:type_name -> jthealth.biz.user.v1.AppRoleMsg
	22, // 4: jthealth.biz.user.v1.GetUserInfosListResponse.list:type_name -> jthealth.biz.user.v1.UserMsg
	25, // 5: jthealth.biz.user.v1.GetFeatureAuditListResponse.list:type_name -> jthealth.biz.user.v1.FeatureAuditMsg
	32, // 6: jthealth.biz.user.v1.GetNotifyListResponse.list:type_name -> jthealth.biz.user.v1.NotifyMsg
	37, // 7: jthealth.biz.user.v1.GetUserProfileResponse.profile:type_name -> jthealth.biz.user.v1.UserProfile
	37, // 8: jthealth.biz.user.v1.SubmitUserProfileRequest.profile:type_name -> jthealth.biz.user.v1.UserProfile
	0,  // 9: jthealth.biz.user.v1.UserAPI.SignInByPhoneCode:input_type -> jthealth.biz.user.v1.SignInByPhoneCodeRequest
	6,  // 10: jthealth.biz.user.v1.UserAPI.SignInByPassWord:input_type -> jthealth.biz.user.v1.SignInByPassWordRequest
	2,  // 11: jthealth.biz.user.v1.UserAPI.GetUserInfosById:input_type -> jthealth.biz.user.v1.GetUserInfosByIdRequest
	4,  // 12: jthealth.biz.user.v1.UserAPI.UpdateUserInfos:input_type -> jthealth.biz.user.v1.UpdateUserInfosRequest
	16, // 13: jthealth.biz.user.v1.UserAPI.CreatedUserProfile:input_type -> jthealth.biz.user.v1.CreatedUserProfileRequest
	20, // 14: jthealth.biz.user.v1.UserAPI.GetUserInfosList:input_type -> jthealth.biz.user.v1.GetUserInfosListRequest
	8,  // 15: jthealth.biz.user.v1.UserAPI.ApplyApplication:input_type -> jthealth.biz.user.v1.ApplyApplicationRequest
	10, // 16: jthealth.biz.user.v1.UserAPI.GetApplicationInfo:input_type -> jthealth.biz.user.v1.GetApplicationInfoRequest
	28, // 17: jthealth.biz.user.v1.UserAPI.RestAppSecretById:input_type -> jthealth.biz.user.v1.RestAppSecretByIdRequest
	14, // 18: jthealth.biz.user.v1.UserAPI.GetApplicationDetails:input_type -> jthealth.biz.user.v1.GetApplicationDetailsRequest
	18, // 19: jthealth.biz.user.v1.UserAPI.ApplyFeatureAudit:input_type -> jthealth.biz.user.v1.ApplyFeatureAuditRequest
	23, // 20: jthealth.biz.user.v1.UserAPI.GetFeatureAuditList:input_type -> jthealth.biz.user.v1.GetFeatureAuditListRequest
	26, // 21: jthealth.biz.user.v1.UserAPI.UpdateFeatureAudit:input_type -> jthealth.biz.user.v1.UpdateFeatureAuditRequest
	30, // 22: jthealth.biz.user.v1.UserAPI.GetNotifyList:input_type -> jthealth.biz.user.v1.GetNotifyListRequest
	33, // 23: jthealth.biz.user.v1.UserAPI.GetUserProfile:input_type -> jthealth.biz.user.v1.GetUserProfileRequest
	35, // 24: jthealth.biz.user.v1.UserAPI.SubmitUserProfile:input_type -> jthealth.biz.user.v1.SubmitUserProfileRequest
	1,  // 25: jthealth.biz.user.v1.UserAPI.SignInByPhoneCode:output_type -> jthealth.biz.user.v1.SignInByPhoneCodeResponse
	7,  // 26: jthealth.biz.user.v1.UserAPI.SignInByPassWord:output_type -> jthealth.biz.user.v1.SignInByPassWordResponse
	3,  // 27: jthealth.biz.user.v1.UserAPI.GetUserInfosById:output_type -> jthealth.biz.user.v1.GetUserInfosByIdResponse
	5,  // 28: jthealth.biz.user.v1.UserAPI.UpdateUserInfos:output_type -> jthealth.biz.user.v1.UpdateUserInfosResponse
	17, // 29: jthealth.biz.user.v1.UserAPI.CreatedUserProfile:output_type -> jthealth.biz.user.v1.CreatedUserProfileResponse
	21, // 30: jthealth.biz.user.v1.UserAPI.GetUserInfosList:output_type -> jthealth.biz.user.v1.GetUserInfosListResponse
	9,  // 31: jthealth.biz.user.v1.UserAPI.ApplyApplication:output_type -> jthealth.biz.user.v1.ApplyApplicationResponse
	11, // 32: jthealth.biz.user.v1.UserAPI.GetApplicationInfo:output_type -> jthealth.biz.user.v1.GetApplicationInfoResponse
	29, // 33: jthealth.biz.user.v1.UserAPI.RestAppSecretById:output_type -> jthealth.biz.user.v1.RestAppSecretByIdResponse
	15, // 34: jthealth.biz.user.v1.UserAPI.GetApplicationDetails:output_type -> jthealth.biz.user.v1.GetApplicationDetailsResponse
	19, // 35: jthealth.biz.user.v1.UserAPI.ApplyFeatureAudit:output_type -> jthealth.biz.user.v1.ApplyFeatureAuditResponse
	24, // 36: jthealth.biz.user.v1.UserAPI.GetFeatureAuditList:output_type -> jthealth.biz.user.v1.GetFeatureAuditListResponse
	27, // 37: jthealth.biz.user.v1.UserAPI.UpdateFeatureAudit:output_type -> jthealth.biz.user.v1.UpdateFeatureAuditResponse
	31, // 38: jthealth.biz.user.v1.UserAPI.GetNotifyList:output_type -> jthealth.biz.user.v1.GetNotifyListResponse
	34, // 39: jthealth.biz.user.v1.UserAPI.GetUserProfile:output_type -> jthealth.biz.user.v1.GetUserProfileResponse
	36, // 40: jthealth.biz.user.v1.UserAPI.SubmitUserProfile:output_type -> jthealth.biz.user.v1.SubmitUserProfileResponse
	25, // [25:41] is the sub-list for method output_type
	9,  // [9:25] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_jthealth_biz_user_v1_user_api_proto_init() }
func file_jthealth_biz_user_v1_user_api_proto_init() {
	if File_jthealth_biz_user_v1_user_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByPhoneCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByPhoneCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfosByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfosByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByPassWordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByPassWordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicationInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicationInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRoleMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicationDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicationDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedUserProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedUserProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyFeatureAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyFeatureAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfosListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfosListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureAuditListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureAuditListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureAuditMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeatureAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeatureAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestAppSecretByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestAppSecretByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitUserProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitUserProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_user_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jthealth_biz_user_v1_user_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jthealth_biz_user_v1_user_api_proto_goTypes,
		DependencyIndexes: file_jthealth_biz_user_v1_user_api_proto_depIdxs,
		MessageInfos:      file_jthealth_biz_user_v1_user_api_proto_msgTypes,
	}.Build()
	File_jthealth_biz_user_v1_user_api_proto = out.File
	file_jthealth_biz_user_v1_user_api_proto_rawDesc = nil
	file_jthealth_biz_user_v1_user_api_proto_goTypes = nil
	file_jthealth_biz_user_v1_user_api_proto_depIdxs = nil
}
