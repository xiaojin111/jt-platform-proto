// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: jthealth/biz/user/v1/applet_user_api.proto

package userv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 手机号验证码登录请求
type AppletUserSignInByPhoneCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 手机号
	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	// 验证码
	SmsCode string `protobuf:"bytes,2,opt,name=sms_code,json=smsCode,proto3" json:"sms_code,omitempty"`
}

func (x *AppletUserSignInByPhoneCodeRequest) Reset() {
	*x = AppletUserSignInByPhoneCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppletUserSignInByPhoneCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppletUserSignInByPhoneCodeRequest) ProtoMessage() {}

func (x *AppletUserSignInByPhoneCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppletUserSignInByPhoneCodeRequest.ProtoReflect.Descriptor instead.
func (*AppletUserSignInByPhoneCodeRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{0}
}

func (x *AppletUserSignInByPhoneCodeRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AppletUserSignInByPhoneCodeRequest) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

// 手机号验证码登录响应
type AppletUserSignInByPhoneCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *AppletUserProfileMsg `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *AppletUserSignInByPhoneCodeResponse) Reset() {
	*x = AppletUserSignInByPhoneCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppletUserSignInByPhoneCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppletUserSignInByPhoneCodeResponse) ProtoMessage() {}

func (x *AppletUserSignInByPhoneCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppletUserSignInByPhoneCodeResponse.ProtoReflect.Descriptor instead.
func (*AppletUserSignInByPhoneCodeResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{1}
}

func (x *AppletUserSignInByPhoneCodeResponse) GetDate() *AppletUserProfileMsg {
	if x != nil {
		return x.Date
	}
	return nil
}

type AppletUserProfileMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 档案ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 昵称
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 生日
	Birthday *Date `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// 测量手
	Hand string `protobuf:"bytes,4,opt,name=hand,proto3" json:"hand,omitempty"`
	// 用户性别
	Gender string `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	// 身高
	Height int32 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	// 体重
	Weight int32 `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	// 档案是否完善
	IsProfileCompleted bool `protobuf:"varint,8,opt,name=is_profile_completed,json=isProfileCompleted,proto3" json:"is_profile_completed,omitempty"`
	// 头像链接
	AvatarUrl string `protobuf:"bytes,9,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// 是否设置密码
	IsSetPassword bool `protobuf:"varint,10,opt,name=is_set_password,json=isSetPassword,proto3" json:"is_set_password,omitempty"`
}

func (x *AppletUserProfileMsg) Reset() {
	*x = AppletUserProfileMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppletUserProfileMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppletUserProfileMsg) ProtoMessage() {}

func (x *AppletUserProfileMsg) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppletUserProfileMsg.ProtoReflect.Descriptor instead.
func (*AppletUserProfileMsg) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{2}
}

func (x *AppletUserProfileMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppletUserProfileMsg) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AppletUserProfileMsg) GetBirthday() *Date {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *AppletUserProfileMsg) GetHand() string {
	if x != nil {
		return x.Hand
	}
	return ""
}

func (x *AppletUserProfileMsg) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *AppletUserProfileMsg) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AppletUserProfileMsg) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AppletUserProfileMsg) GetIsProfileCompleted() bool {
	if x != nil {
		return x.IsProfileCompleted
	}
	return false
}

func (x *AppletUserProfileMsg) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *AppletUserProfileMsg) GetIsSetPassword() bool {
	if x != nil {
		return x.IsSetPassword
	}
	return false
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{3}
}

func (x *Date) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

// 通过微信小程序登录请求
type SignInByWechatMiniProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 授权临时票据
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SignInByWechatMiniProgramRequest) Reset() {
	*x = SignInByWechatMiniProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByWechatMiniProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByWechatMiniProgramRequest) ProtoMessage() {}

func (x *SignInByWechatMiniProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByWechatMiniProgramRequest.ProtoReflect.Descriptor instead.
func (*SignInByWechatMiniProgramRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{4}
}

func (x *SignInByWechatMiniProgramRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SignInByWechatMiniProgramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    *AppletUserProfileMsg `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	UnionId string                `protobuf:"bytes,2,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
}

func (x *SignInByWechatMiniProgramResponse) Reset() {
	*x = SignInByWechatMiniProgramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByWechatMiniProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByWechatMiniProgramResponse) ProtoMessage() {}

func (x *SignInByWechatMiniProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByWechatMiniProgramResponse.ProtoReflect.Descriptor instead.
func (*SignInByWechatMiniProgramResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{5}
}

func (x *SignInByWechatMiniProgramResponse) GetDate() *AppletUserProfileMsg {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *SignInByWechatMiniProgramResponse) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

// 获取微信手机号请求
type GetWechatPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 加密数据
	EncryptedData string `protobuf:"bytes,1,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	// 加密初始向量
	V1 string `protobuf:"bytes,2,opt,name=v1,proto3" json:"v1,omitempty"`
	// 微信union_id
	UnionId string `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
}

func (x *GetWechatPhoneRequest) Reset() {
	*x = GetWechatPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWechatPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWechatPhoneRequest) ProtoMessage() {}

func (x *GetWechatPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWechatPhoneRequest.ProtoReflect.Descriptor instead.
func (*GetWechatPhoneRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetWechatPhoneRequest) GetEncryptedData() string {
	if x != nil {
		return x.EncryptedData
	}
	return ""
}

func (x *GetWechatPhoneRequest) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *GetWechatPhoneRequest) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

// 获取微信手机号响应
type GetWechatPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 手机区号
	NationCode string `protobuf:"bytes,1,opt,name=nation_code,json=nationCode,proto3" json:"nation_code,omitempty"`
	// 手机号
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetWechatPhoneResponse) Reset() {
	*x = GetWechatPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWechatPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWechatPhoneResponse) ProtoMessage() {}

func (x *GetWechatPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWechatPhoneResponse.ProtoReflect.Descriptor instead.
func (*GetWechatPhoneResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetWechatPhoneResponse) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *GetWechatPhoneResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 微信登录绑定手机号请求
type BindWechatPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 手机区号
	NationCode string `protobuf:"bytes,1,opt,name=nation_code,json=nationCode,proto3" json:"nation_code,omitempty"`
	// 手机号
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	// 微信union_id
	UnionId string `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
}

func (x *BindWechatPhoneRequest) Reset() {
	*x = BindWechatPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindWechatPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindWechatPhoneRequest) ProtoMessage() {}

func (x *BindWechatPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindWechatPhoneRequest.ProtoReflect.Descriptor instead.
func (*BindWechatPhoneRequest) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{8}
}

func (x *BindWechatPhoneRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *BindWechatPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *BindWechatPhoneRequest) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

// 微信登录绑定手机号响应
type BindWechatPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 登录信息
	Date *AppletUserProfileMsg `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// 该手机号是否绑定微信
	HasBindWechat bool `protobuf:"varint,2,opt,name=has_bind_wechat,json=hasBindWechat,proto3" json:"has_bind_wechat,omitempty"`
}

func (x *BindWechatPhoneResponse) Reset() {
	*x = BindWechatPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindWechatPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindWechatPhoneResponse) ProtoMessage() {}

func (x *BindWechatPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindWechatPhoneResponse.ProtoReflect.Descriptor instead.
func (*BindWechatPhoneResponse) Descriptor() ([]byte, []int) {
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP(), []int{9}
}

func (x *BindWechatPhoneResponse) GetDate() *AppletUserProfileMsg {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *BindWechatPhoneResponse) GetHasBindWechat() bool {
	if x != nil {
		return x.HasBindWechat
	}
	return false
}

var File_jthealth_biz_user_v1_applet_user_api_proto protoreflect.FileDescriptor

var file_jthealth_biz_user_v1_applet_user_api_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x65, 0x0a, 0x23, 0x41, 0x70,
	0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x22, 0xd8, 0x02, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69,
	0x73, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x42, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79,
	0x22, 0x36, 0x0a, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x7e, 0x0a, 0x21, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x81, 0x01, 0x0a, 0x17, 0x42, 0x69, 0x6e, 0x64, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6a, 0x74, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x68, 0x61, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x32, 0x90, 0x04, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x12, 0x92, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x19,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x36, 0x2e, 0x6a, 0x74, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42,
	0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x2e, 0x6a,
	0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6a, 0x74, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x2e, 0x6a, 0x74, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6a, 0x74, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa3, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x6a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x6b, 0x65, 0x6a, 0x69, 0x2f, 0x6a, 0x74,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6a, 0x74,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4a, 0x42, 0x55, 0xaa,
	0x02, 0x14, 0x4a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x42, 0x69, 0x7a, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x4a, 0x74, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5c, 0x42, 0x69, 0x7a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jthealth_biz_user_v1_applet_user_api_proto_rawDescOnce sync.Once
	file_jthealth_biz_user_v1_applet_user_api_proto_rawDescData = file_jthealth_biz_user_v1_applet_user_api_proto_rawDesc
)

func file_jthealth_biz_user_v1_applet_user_api_proto_rawDescGZIP() []byte {
	file_jthealth_biz_user_v1_applet_user_api_proto_rawDescOnce.Do(func() {
		file_jthealth_biz_user_v1_applet_user_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_jthealth_biz_user_v1_applet_user_api_proto_rawDescData)
	})
	return file_jthealth_biz_user_v1_applet_user_api_proto_rawDescData
}

var file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_jthealth_biz_user_v1_applet_user_api_proto_goTypes = []interface{}{
	(*AppletUserSignInByPhoneCodeRequest)(nil),  // 0: jthealth.biz.user.v1.AppletUserSignInByPhoneCodeRequest
	(*AppletUserSignInByPhoneCodeResponse)(nil), // 1: jthealth.biz.user.v1.AppletUserSignInByPhoneCodeResponse
	(*AppletUserProfileMsg)(nil),                // 2: jthealth.biz.user.v1.AppletUserProfileMsg
	(*Date)(nil),                                // 3: jthealth.biz.user.v1.Date
	(*SignInByWechatMiniProgramRequest)(nil),    // 4: jthealth.biz.user.v1.SignInByWechatMiniProgramRequest
	(*SignInByWechatMiniProgramResponse)(nil),   // 5: jthealth.biz.user.v1.SignInByWechatMiniProgramResponse
	(*GetWechatPhoneRequest)(nil),               // 6: jthealth.biz.user.v1.GetWechatPhoneRequest
	(*GetWechatPhoneResponse)(nil),              // 7: jthealth.biz.user.v1.GetWechatPhoneResponse
	(*BindWechatPhoneRequest)(nil),              // 8: jthealth.biz.user.v1.BindWechatPhoneRequest
	(*BindWechatPhoneResponse)(nil),             // 9: jthealth.biz.user.v1.BindWechatPhoneResponse
}
var file_jthealth_biz_user_v1_applet_user_api_proto_depIdxs = []int32{
	2, // 0: jthealth.biz.user.v1.AppletUserSignInByPhoneCodeResponse.date:type_name -> jthealth.biz.user.v1.AppletUserProfileMsg
	3, // 1: jthealth.biz.user.v1.AppletUserProfileMsg.birthday:type_name -> jthealth.biz.user.v1.Date
	2, // 2: jthealth.biz.user.v1.SignInByWechatMiniProgramResponse.date:type_name -> jthealth.biz.user.v1.AppletUserProfileMsg
	2, // 3: jthealth.biz.user.v1.BindWechatPhoneResponse.date:type_name -> jthealth.biz.user.v1.AppletUserProfileMsg
	0, // 4: jthealth.biz.user.v1.AppletUserAPI.AppletUserSignInByPhoneCode:input_type -> jthealth.biz.user.v1.AppletUserSignInByPhoneCodeRequest
	4, // 5: jthealth.biz.user.v1.AppletUserAPI.SignInByWechatMiniProgram:input_type -> jthealth.biz.user.v1.SignInByWechatMiniProgramRequest
	6, // 6: jthealth.biz.user.v1.AppletUserAPI.GetWechatPhone:input_type -> jthealth.biz.user.v1.GetWechatPhoneRequest
	8, // 7: jthealth.biz.user.v1.AppletUserAPI.BindWechatPhone:input_type -> jthealth.biz.user.v1.BindWechatPhoneRequest
	1, // 8: jthealth.biz.user.v1.AppletUserAPI.AppletUserSignInByPhoneCode:output_type -> jthealth.biz.user.v1.AppletUserSignInByPhoneCodeResponse
	5, // 9: jthealth.biz.user.v1.AppletUserAPI.SignInByWechatMiniProgram:output_type -> jthealth.biz.user.v1.SignInByWechatMiniProgramResponse
	7, // 10: jthealth.biz.user.v1.AppletUserAPI.GetWechatPhone:output_type -> jthealth.biz.user.v1.GetWechatPhoneResponse
	9, // 11: jthealth.biz.user.v1.AppletUserAPI.BindWechatPhone:output_type -> jthealth.biz.user.v1.BindWechatPhoneResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jthealth_biz_user_v1_applet_user_api_proto_init() }
func file_jthealth_biz_user_v1_applet_user_api_proto_init() {
	if File_jthealth_biz_user_v1_applet_user_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppletUserSignInByPhoneCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppletUserSignInByPhoneCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppletUserProfileMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByWechatMiniProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByWechatMiniProgramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWechatPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWechatPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindWechatPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindWechatPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jthealth_biz_user_v1_applet_user_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jthealth_biz_user_v1_applet_user_api_proto_goTypes,
		DependencyIndexes: file_jthealth_biz_user_v1_applet_user_api_proto_depIdxs,
		MessageInfos:      file_jthealth_biz_user_v1_applet_user_api_proto_msgTypes,
	}.Build()
	File_jthealth_biz_user_v1_applet_user_api_proto = out.File
	file_jthealth_biz_user_v1_applet_user_api_proto_rawDesc = nil
	file_jthealth_biz_user_v1_applet_user_api_proto_goTypes = nil
	file_jthealth_biz_user_v1_applet_user_api_proto_depIdxs = nil
}
