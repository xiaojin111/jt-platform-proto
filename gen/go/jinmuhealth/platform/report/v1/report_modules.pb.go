//
// 常州金姆健康科技有限公司. (c) 2019
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: jinmuhealth/platform/report/v1/report_modules.proto

package reportv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 分析报告模块输入（参数）
type ReportModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块名称
	// 目前可用的模块名与模块的对应关系
	// - heartrate 心率模块
	// - risk_estimate 风险预估模块
	// - physical_dialectics 体质辩证模块
	// - dirty_dialectic 脏腑辩证模块
	// - physical_therapy_index 理疗指数模块
	// - conditioning_advice 调理建议模块
	// - dietary_advice 食疗建议模块
	// - sports_advice 运动方案模块
	// - chinese_medicine_advice 中药调理建议模块
	// - physical_therapy_advice 理疗建议模块
	// - meridian 经络模块
	// - emotional_health 情绪健康模块
	// - facial_skin 面部美肤模块
	// - facial_skin_male 男性面部美肤模块
	// - gynecological_disease_risk_estimate 妇科疾病风险预估模块
	// - gynecological_inflammation 妇科炎症模块
	// - hormone_level 激素水平模块
	// - uterine_health 子宫健康模块
	// - menstrual_sunflower 月经（天葵）健康模块
	// - irregular_menstruation 月经不调模块
	// - dysmenorrhea_index 痛经模块
	// - reproductive_age 生殖年龄模块
	// - lymphatic_health 淋巴健康模块
	// - breast_health 乳腺健康模块
	// - breast_cancer 乳腺癌卵巢癌风险模块
	// - measurement_judgment 测量异常判断模块
	// - tips 温馨提示模块
	// - stress_state_judgment 应激态模块
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 模块参数表 KV（可选）
	Params map[string]string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 模块计算输入数据 （可选）
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReportModuleInput) Reset() {
	*x = ReportModuleInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportModuleInput) ProtoMessage() {}

func (x *ReportModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportModuleInput.ProtoReflect.Descriptor instead.
func (*ReportModuleInput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{0}
}

func (x *ReportModuleInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportModuleInput) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ReportModuleInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 分析报告结果块
type ReportModuleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块名称
	ModuleName string `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	// 是否启用当前模块
	// false 时 result 数据不可用
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// 模块计算结果
	Result *anypb.Any `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReportModuleResult) Reset() {
	*x = ReportModuleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportModuleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportModuleResult) ProtoMessage() {}

func (x *ReportModuleResult) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportModuleResult.ProtoReflect.Descriptor instead.
func (*ReportModuleResult) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{1}
}

func (x *ReportModuleResult) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *ReportModuleResult) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ReportModuleResult) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

// 经络数据
type CInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 心包经
	C0 int32 `protobuf:"varint,1,opt,name=c0,proto3" json:"c0,omitempty"`
	// 肝经
	C1 int32 `protobuf:"varint,2,opt,name=c1,proto3" json:"c1,omitempty"`
	// 肾经
	C2 int32 `protobuf:"varint,3,opt,name=c2,proto3" json:"c2,omitempty"`
	// 脾经
	C3 int32 `protobuf:"varint,4,opt,name=c3,proto3" json:"c3,omitempty"`
	// 肺经
	C4 int32 `protobuf:"varint,5,opt,name=c4,proto3" json:"c4,omitempty"`
	// 胃经
	C5 int32 `protobuf:"varint,6,opt,name=c5,proto3" json:"c5,omitempty"`
	// 胆经
	C6 int32 `protobuf:"varint,7,opt,name=c6,proto3" json:"c6,omitempty"`
	// 膀胱经
	C7 int32 `protobuf:"varint,8,opt,name=c7,proto3" json:"c7,omitempty"`
	// 测量时间（可选）
	TestTime *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=test_time,json=testTime,proto3" json:"test_time,omitempty"`
}

func (x *CInfo) Reset() {
	*x = CInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInfo) ProtoMessage() {}

func (x *CInfo) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInfo.ProtoReflect.Descriptor instead.
func (*CInfo) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{2}
}

func (x *CInfo) GetC0() int32 {
	if x != nil {
		return x.C0
	}
	return 0
}

func (x *CInfo) GetC1() int32 {
	if x != nil {
		return x.C1
	}
	return 0
}

func (x *CInfo) GetC2() int32 {
	if x != nil {
		return x.C2
	}
	return 0
}

func (x *CInfo) GetC3() int32 {
	if x != nil {
		return x.C3
	}
	return 0
}

func (x *CInfo) GetC4() int32 {
	if x != nil {
		return x.C4
	}
	return 0
}

func (x *CInfo) GetC5() int32 {
	if x != nil {
		return x.C5
	}
	return 0
}

func (x *CInfo) GetC6() int32 {
	if x != nil {
		return x.C6
	}
	return 0
}

func (x *CInfo) GetC7() int32 {
	if x != nil {
		return x.C7
	}
	return 0
}

func (x *CInfo) GetTestTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TestTime
	}
	return nil
}

// Lookup 模块对应的 key 和 value.
type Lookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 序号
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 显示内容
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 得分或排序值
	Score float64 `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
	// 词条链接 Key
	LinkKey string `protobuf:"bytes,4,opt,name=link_key,json=linkKey,proto3" json:"link_key,omitempty"`
}

func (x *Lookup) Reset() {
	*x = Lookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lookup) ProtoMessage() {}

func (x *Lookup) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lookup.ProtoReflect.Descriptor instead.
func (*Lookup) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{3}
}

func (x *Lookup) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Lookup) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Lookup) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Lookup) GetLinkKey() string {
	if x != nil {
		return x.LinkKey
	}
	return ""
}

// 心率模块
type HeartRateModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 平均心率
	AverageHeartRate int32 `protobuf:"varint,1,opt,name=average_heart_rate,json=averageHeartRate,proto3" json:"average_heart_rate,omitempty"`
	// 最高心率
	HighestHeartRate int32 `protobuf:"varint,2,opt,name=highest_heart_rate,json=highestHeartRate,proto3" json:"highest_heart_rate,omitempty"`
	// 最低心率
	LowestHeartRate int32 `protobuf:"varint,3,opt,name=lowest_heart_rate,json=lowestHeartRate,proto3" json:"lowest_heart_rate,omitempty"`
}

func (x *HeartRateModuleOutput) Reset() {
	*x = HeartRateModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartRateModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartRateModuleOutput) ProtoMessage() {}

func (x *HeartRateModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartRateModuleOutput.ProtoReflect.Descriptor instead.
func (*HeartRateModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{4}
}

func (x *HeartRateModuleOutput) GetAverageHeartRate() int32 {
	if x != nil {
		return x.AverageHeartRate
	}
	return 0
}

func (x *HeartRateModuleOutput) GetHighestHeartRate() int32 {
	if x != nil {
		return x.HighestHeartRate
	}
	return 0
}

func (x *HeartRateModuleOutput) GetLowestHeartRate() int32 {
	if x != nil {
		return x.LowestHeartRate
	}
	return 0
}

// 风险预估模块
type RiskEstimateModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 疾病分值
	DiseaseEstimate []*Lookup `protobuf:"bytes,1,rep,name=disease_estimate,json=diseaseEstimate,proto3" json:"disease_estimate,omitempty"`
	// 提示信息
	PromptMessage []*Lookup `protobuf:"bytes,2,rep,name=prompt_message,json=promptMessage,proto3" json:"prompt_message,omitempty"`
}

func (x *RiskEstimateModuleOutput) Reset() {
	*x = RiskEstimateModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskEstimateModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskEstimateModuleOutput) ProtoMessage() {}

func (x *RiskEstimateModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskEstimateModuleOutput.ProtoReflect.Descriptor instead.
func (*RiskEstimateModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{5}
}

func (x *RiskEstimateModuleOutput) GetDiseaseEstimate() []*Lookup {
	if x != nil {
		return x.DiseaseEstimate
	}
	return nil
}

func (x *RiskEstimateModuleOutput) GetPromptMessage() []*Lookup {
	if x != nil {
		return x.PromptMessage
	}
	return nil
}

// 体质辩证模块
type PhysicalDialecticsModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *PhysicalDialecticsModuleOutput) Reset() {
	*x = PhysicalDialecticsModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalDialecticsModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalDialecticsModuleOutput) ProtoMessage() {}

func (x *PhysicalDialecticsModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalDialecticsModuleOutput.ProtoReflect.Descriptor instead.
func (*PhysicalDialecticsModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{6}
}

func (x *PhysicalDialecticsModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 脏腑辩证模块
type DirtyDialecticModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *DirtyDialecticModuleOutput) Reset() {
	*x = DirtyDialecticModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirtyDialecticModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirtyDialecticModuleOutput) ProtoMessage() {}

func (x *DirtyDialecticModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirtyDialecticModuleOutput.ProtoReflect.Descriptor instead.
func (*DirtyDialecticModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{7}
}

func (x *DirtyDialecticModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 理疗指数模块
type PhysicalTherapyIndexModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 阴虚指数
	F0 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f0,proto3" json:"f0,omitempty"`
	// 阳虚指数
	F1 *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=f1,proto3" json:"f1,omitempty"`
	// 湿气指数
	F2 *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=f2,proto3" json:"f2,omitempty"`
	// 血瘀指数
	F3 *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=f3,proto3" json:"f3,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,10,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *PhysicalTherapyIndexModuleOutput) Reset() {
	*x = PhysicalTherapyIndexModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalTherapyIndexModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalTherapyIndexModuleOutput) ProtoMessage() {}

func (x *PhysicalTherapyIndexModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalTherapyIndexModuleOutput.ProtoReflect.Descriptor instead.
func (*PhysicalTherapyIndexModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{8}
}

func (x *PhysicalTherapyIndexModuleOutput) GetF0() *wrapperspb.Int32Value {
	if x != nil {
		return x.F0
	}
	return nil
}

func (x *PhysicalTherapyIndexModuleOutput) GetF1() *wrapperspb.Int32Value {
	if x != nil {
		return x.F1
	}
	return nil
}

func (x *PhysicalTherapyIndexModuleOutput) GetF2() *wrapperspb.Int32Value {
	if x != nil {
		return x.F2
	}
	return nil
}

func (x *PhysicalTherapyIndexModuleOutput) GetF3() *wrapperspb.Int32Value {
	if x != nil {
		return x.F3
	}
	return nil
}

func (x *PhysicalTherapyIndexModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 调理建议模块
type ConditioningAdviceModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 食疗建议
	DietaryAdvice *DietaryAdviceModuleOutput `protobuf:"bytes,1,opt,name=dietary_advice,json=dietaryAdvice,proto3" json:"dietary_advice,omitempty"`
	// 运动方案
	SportsAdvice *SportsAdviceModuleOutput `protobuf:"bytes,2,opt,name=sports_advice,json=sportsAdvice,proto3" json:"sports_advice,omitempty"`
	// 中药调理建议
	ChineseMedicineAdvice *ChineseMedicineAdviceModuleOutput `protobuf:"bytes,3,opt,name=chinese_medicine_advice,json=chineseMedicineAdvice,proto3" json:"chinese_medicine_advice,omitempty"`
	// 理疗建议
	PhysicalTherapyAdvice *PhysicalTherapyAdviceModuleOutput `protobuf:"bytes,4,opt,name=physical_therapy_advice,json=physicalTherapyAdvice,proto3" json:"physical_therapy_advice,omitempty"`
}

func (x *ConditioningAdviceModuleOutput) Reset() {
	*x = ConditioningAdviceModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditioningAdviceModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditioningAdviceModuleOutput) ProtoMessage() {}

func (x *ConditioningAdviceModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditioningAdviceModuleOutput.ProtoReflect.Descriptor instead.
func (*ConditioningAdviceModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{9}
}

func (x *ConditioningAdviceModuleOutput) GetDietaryAdvice() *DietaryAdviceModuleOutput {
	if x != nil {
		return x.DietaryAdvice
	}
	return nil
}

func (x *ConditioningAdviceModuleOutput) GetSportsAdvice() *SportsAdviceModuleOutput {
	if x != nil {
		return x.SportsAdvice
	}
	return nil
}

func (x *ConditioningAdviceModuleOutput) GetChineseMedicineAdvice() *ChineseMedicineAdviceModuleOutput {
	if x != nil {
		return x.ChineseMedicineAdvice
	}
	return nil
}

func (x *ConditioningAdviceModuleOutput) GetPhysicalTherapyAdvice() *PhysicalTherapyAdviceModuleOutput {
	if x != nil {
		return x.PhysicalTherapyAdvice
	}
	return nil
}

// 食疗建议模块
type DietaryAdviceModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *DietaryAdviceModuleOutput) Reset() {
	*x = DietaryAdviceModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DietaryAdviceModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DietaryAdviceModuleOutput) ProtoMessage() {}

func (x *DietaryAdviceModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DietaryAdviceModuleOutput.ProtoReflect.Descriptor instead.
func (*DietaryAdviceModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{10}
}

func (x *DietaryAdviceModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 运动方案模块
type SportsAdviceModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *SportsAdviceModuleOutput) Reset() {
	*x = SportsAdviceModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportsAdviceModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportsAdviceModuleOutput) ProtoMessage() {}

func (x *SportsAdviceModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportsAdviceModuleOutput.ProtoReflect.Descriptor instead.
func (*SportsAdviceModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{11}
}

func (x *SportsAdviceModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 中药调理建议模块
type ChineseMedicineAdviceModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *ChineseMedicineAdviceModuleOutput) Reset() {
	*x = ChineseMedicineAdviceModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChineseMedicineAdviceModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChineseMedicineAdviceModuleOutput) ProtoMessage() {}

func (x *ChineseMedicineAdviceModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChineseMedicineAdviceModuleOutput.ProtoReflect.Descriptor instead.
func (*ChineseMedicineAdviceModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{12}
}

func (x *ChineseMedicineAdviceModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 理疗建议模块
type PhysicalTherapyAdviceModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *PhysicalTherapyAdviceModuleOutput) Reset() {
	*x = PhysicalTherapyAdviceModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalTherapyAdviceModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalTherapyAdviceModuleOutput) ProtoMessage() {}

func (x *PhysicalTherapyAdviceModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalTherapyAdviceModuleOutput.ProtoReflect.Descriptor instead.
func (*PhysicalTherapyAdviceModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{13}
}

func (x *PhysicalTherapyAdviceModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 局部脉搏波模块
type PartialPulseWaveModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 采样点数据
	Points []uint32 `protobuf:"varint,1,rep,packed,name=points,proto3" json:"points,omitempty"`
}

func (x *PartialPulseWaveModuleOutput) Reset() {
	*x = PartialPulseWaveModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialPulseWaveModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialPulseWaveModuleOutput) ProtoMessage() {}

func (x *PartialPulseWaveModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialPulseWaveModuleOutput.ProtoReflect.Descriptor instead.
func (*PartialPulseWaveModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{14}
}

func (x *PartialPulseWaveModuleOutput) GetPoints() []uint32 {
	if x != nil {
		return x.Points
	}
	return nil
}

// 经络柱状图模块
type MeridianBarChartModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 经络值
	MeridianValue *CInfo `protobuf:"bytes,1,opt,name=meridian_value,json=meridianValue,proto3" json:"meridian_value,omitempty"`
}

func (x *MeridianBarChartModuleOutput) Reset() {
	*x = MeridianBarChartModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeridianBarChartModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeridianBarChartModuleOutput) ProtoMessage() {}

func (x *MeridianBarChartModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeridianBarChartModuleOutput.ProtoReflect.Descriptor instead.
func (*MeridianBarChartModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{15}
}

func (x *MeridianBarChartModuleOutput) GetMeridianValue() *CInfo {
	if x != nil {
		return x.MeridianValue
	}
	return nil
}

// 经络解读模块
type MeridianExplainModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *MeridianExplainModuleOutput) Reset() {
	*x = MeridianExplainModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeridianExplainModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeridianExplainModuleOutput) ProtoMessage() {}

func (x *MeridianExplainModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeridianExplainModuleOutput.ProtoReflect.Descriptor instead.
func (*MeridianExplainModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{16}
}

func (x *MeridianExplainModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 情绪健康模块
type EmotionalHealthModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 情绪健康指数
	F103 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f103,proto3" json:"f103,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *EmotionalHealthModuleOutput) Reset() {
	*x = EmotionalHealthModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmotionalHealthModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotionalHealthModuleOutput) ProtoMessage() {}

func (x *EmotionalHealthModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotionalHealthModuleOutput.ProtoReflect.Descriptor instead.
func (*EmotionalHealthModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{17}
}

func (x *EmotionalHealthModuleOutput) GetF103() *wrapperspb.Int32Value {
	if x != nil {
		return x.F103
	}
	return nil
}

func (x *EmotionalHealthModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 面部美肤模块
type FacialSkinModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 面部美肤指数
	F104 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f104,proto3" json:"f104,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *FacialSkinModuleOutput) Reset() {
	*x = FacialSkinModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacialSkinModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacialSkinModuleOutput) ProtoMessage() {}

func (x *FacialSkinModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacialSkinModuleOutput.ProtoReflect.Descriptor instead.
func (*FacialSkinModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{18}
}

func (x *FacialSkinModuleOutput) GetF104() *wrapperspb.Int32Value {
	if x != nil {
		return x.F104
	}
	return nil
}

func (x *FacialSkinModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 男性面部美肤模块
type FacialSkinMaleModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 面部美肤指数
	F109 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f109,proto3" json:"f109,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *FacialSkinMaleModuleOutput) Reset() {
	*x = FacialSkinMaleModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacialSkinMaleModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacialSkinMaleModuleOutput) ProtoMessage() {}

func (x *FacialSkinMaleModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacialSkinMaleModuleOutput.ProtoReflect.Descriptor instead.
func (*FacialSkinMaleModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{19}
}

func (x *FacialSkinMaleModuleOutput) GetF109() *wrapperspb.Int32Value {
	if x != nil {
		return x.F109
	}
	return nil
}

func (x *FacialSkinMaleModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 妇科疾病风险预估模块
type GynecologicalDiseaseRiskEstimateModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 妇科疾病风险指数
	F101 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f101,proto3" json:"f101,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *GynecologicalDiseaseRiskEstimateModuleOutput) Reset() {
	*x = GynecologicalDiseaseRiskEstimateModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GynecologicalDiseaseRiskEstimateModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GynecologicalDiseaseRiskEstimateModuleOutput) ProtoMessage() {}

func (x *GynecologicalDiseaseRiskEstimateModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GynecologicalDiseaseRiskEstimateModuleOutput.ProtoReflect.Descriptor instead.
func (*GynecologicalDiseaseRiskEstimateModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{20}
}

func (x *GynecologicalDiseaseRiskEstimateModuleOutput) GetF101() *wrapperspb.Int32Value {
	if x != nil {
		return x.F101
	}
	return nil
}

func (x *GynecologicalDiseaseRiskEstimateModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 妇科炎症模块
type GynecologicalInflammationModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 妇科炎症指数
	F102 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f102,proto3" json:"f102,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *GynecologicalInflammationModuleOutput) Reset() {
	*x = GynecologicalInflammationModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GynecologicalInflammationModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GynecologicalInflammationModuleOutput) ProtoMessage() {}

func (x *GynecologicalInflammationModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GynecologicalInflammationModuleOutput.ProtoReflect.Descriptor instead.
func (*GynecologicalInflammationModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{21}
}

func (x *GynecologicalInflammationModuleOutput) GetF102() *wrapperspb.Int32Value {
	if x != nil {
		return x.F102
	}
	return nil
}

func (x *GynecologicalInflammationModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 激素水平模块
type HormoneLevelModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 激素水平指数
	F106 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f106,proto3" json:"f106,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *HormoneLevelModuleOutput) Reset() {
	*x = HormoneLevelModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HormoneLevelModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HormoneLevelModuleOutput) ProtoMessage() {}

func (x *HormoneLevelModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HormoneLevelModuleOutput.ProtoReflect.Descriptor instead.
func (*HormoneLevelModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{22}
}

func (x *HormoneLevelModuleOutput) GetF106() *wrapperspb.Int32Value {
	if x != nil {
		return x.F106
	}
	return nil
}

func (x *HormoneLevelModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 子宫健康模块
type UterineHealthModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 子宫健康指数
	F100 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f100,proto3" json:"f100,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *UterineHealthModuleOutput) Reset() {
	*x = UterineHealthModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UterineHealthModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UterineHealthModuleOutput) ProtoMessage() {}

func (x *UterineHealthModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UterineHealthModuleOutput.ProtoReflect.Descriptor instead.
func (*UterineHealthModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{23}
}

func (x *UterineHealthModuleOutput) GetF100() *wrapperspb.Int32Value {
	if x != nil {
		return x.F100
	}
	return nil
}

func (x *UterineHealthModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 月经（天葵）健康模块
type MenstrualSunflowerModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 在月经健康判读中选择A的分值
	M0 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=m0,proto3" json:"m0,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *MenstrualSunflowerModuleOutput) Reset() {
	*x = MenstrualSunflowerModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenstrualSunflowerModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenstrualSunflowerModuleOutput) ProtoMessage() {}

func (x *MenstrualSunflowerModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenstrualSunflowerModuleOutput.ProtoReflect.Descriptor instead.
func (*MenstrualSunflowerModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{24}
}

func (x *MenstrualSunflowerModuleOutput) GetM0() *wrapperspb.Int32Value {
	if x != nil {
		return x.M0
	}
	return nil
}

func (x *MenstrualSunflowerModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 月经不调模块
type IrregularMenstruationModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 在月经健康判读中选择B的分值
	M1 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=m1,proto3" json:"m1,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *IrregularMenstruationModuleOutput) Reset() {
	*x = IrregularMenstruationModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IrregularMenstruationModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IrregularMenstruationModuleOutput) ProtoMessage() {}

func (x *IrregularMenstruationModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IrregularMenstruationModuleOutput.ProtoReflect.Descriptor instead.
func (*IrregularMenstruationModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{25}
}

func (x *IrregularMenstruationModuleOutput) GetM1() *wrapperspb.Int32Value {
	if x != nil {
		return x.M1
	}
	return nil
}

func (x *IrregularMenstruationModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 痛经模块
type DysmenorrheaIndexModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 在月经健康判读中选择C的分值
	M2 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=m2,proto3" json:"m2,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *DysmenorrheaIndexModuleOutput) Reset() {
	*x = DysmenorrheaIndexModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DysmenorrheaIndexModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DysmenorrheaIndexModuleOutput) ProtoMessage() {}

func (x *DysmenorrheaIndexModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DysmenorrheaIndexModuleOutput.ProtoReflect.Descriptor instead.
func (*DysmenorrheaIndexModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{26}
}

func (x *DysmenorrheaIndexModuleOutput) GetM2() *wrapperspb.Int32Value {
	if x != nil {
		return x.M2
	}
	return nil
}

func (x *DysmenorrheaIndexModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 生殖年龄模块
type ReproductiveAgeModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生殖年龄指数
	F105 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f105,proto3" json:"f105,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *ReproductiveAgeModuleOutput) Reset() {
	*x = ReproductiveAgeModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReproductiveAgeModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReproductiveAgeModuleOutput) ProtoMessage() {}

func (x *ReproductiveAgeModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReproductiveAgeModuleOutput.ProtoReflect.Descriptor instead.
func (*ReproductiveAgeModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{27}
}

func (x *ReproductiveAgeModuleOutput) GetF105() *wrapperspb.Int32Value {
	if x != nil {
		return x.F105
	}
	return nil
}

func (x *ReproductiveAgeModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 淋巴健康模块
type LymphaticHealthModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 淋巴健康指数
	F107 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=f107,proto3" json:"f107,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,2,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *LymphaticHealthModuleOutput) Reset() {
	*x = LymphaticHealthModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LymphaticHealthModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LymphaticHealthModuleOutput) ProtoMessage() {}

func (x *LymphaticHealthModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LymphaticHealthModuleOutput.ProtoReflect.Descriptor instead.
func (*LymphaticHealthModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{28}
}

func (x *LymphaticHealthModuleOutput) GetF107() *wrapperspb.Int32Value {
	if x != nil {
		return x.F107
	}
	return nil
}

func (x *LymphaticHealthModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 乳腺健康模块
type BreastHealthModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 在乳腺健康中问答的计分
	M3 *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=m3,proto3" json:"m3,omitempty"`
	// 乳腺健康指数
	F108 *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=f108,proto3" json:"f108,omitempty"`
	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,3,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *BreastHealthModuleOutput) Reset() {
	*x = BreastHealthModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreastHealthModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreastHealthModuleOutput) ProtoMessage() {}

func (x *BreastHealthModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreastHealthModuleOutput.ProtoReflect.Descriptor instead.
func (*BreastHealthModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{29}
}

func (x *BreastHealthModuleOutput) GetM3() *wrapperspb.Int32Value {
	if x != nil {
		return x.M3
	}
	return nil
}

func (x *BreastHealthModuleOutput) GetF108() *wrapperspb.Int32Value {
	if x != nil {
		return x.F108
	}
	return nil
}

func (x *BreastHealthModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 乳腺癌卵巢癌风险模块
type BreastCancerModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *BreastCancerModuleOutput) Reset() {
	*x = BreastCancerModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreastCancerModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreastCancerModuleOutput) ProtoMessage() {}

func (x *BreastCancerModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreastCancerModuleOutput.ProtoReflect.Descriptor instead.
func (*BreastCancerModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{30}
}

func (x *BreastCancerModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 测量异常判断模块
type MeasurementJudgmentModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *MeasurementJudgmentModuleOutput) Reset() {
	*x = MeasurementJudgmentModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementJudgmentModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementJudgmentModuleOutput) ProtoMessage() {}

func (x *MeasurementJudgmentModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementJudgmentModuleOutput.ProtoReflect.Descriptor instead.
func (*MeasurementJudgmentModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{31}
}

func (x *MeasurementJudgmentModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 温馨提示模块
type TipsModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 显示内容
	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
}

func (x *TipsModuleOutput) Reset() {
	*x = TipsModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TipsModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TipsModuleOutput) ProtoMessage() {}

func (x *TipsModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TipsModuleOutput.ProtoReflect.Descriptor instead.
func (*TipsModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{32}
}

func (x *TipsModuleOutput) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

// 应激态模块
type StressStateJudgmentModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否为应激态
	HasStressState bool `protobuf:"varint,1,opt,name=has_stress_state,json=hasStressState,proto3" json:"has_stress_state,omitempty"`
	// 是否运动过
	HasDoneSports bool `protobuf:"varint,2,opt,name=has_done_sports,json=hasDoneSports,proto3" json:"has_done_sports,omitempty"`
	// 是否饮酒
	HasDrunkWine bool `protobuf:"varint,3,opt,name=has_drunk_wine,json=hasDrunkWine,proto3" json:"has_drunk_wine,omitempty"`
	// 是否感冒
	HasHadCold bool `protobuf:"varint,4,opt,name=has_had_cold,json=hasHadCold,proto3" json:"has_had_cold,omitempty"`
	// 是否鼻炎发作
	HasRhinitisEpisode bool `protobuf:"varint,5,opt,name=has_rhinitis_episode,json=hasRhinitisEpisode,proto3" json:"has_rhinitis_episode,omitempty"`
	// 是否腹痛腹泻
	HasAbdominalPain bool `protobuf:"varint,6,opt,name=has_abdominal_pain,json=hasAbdominalPain,proto3" json:"has_abdominal_pain,omitempty"`
	// 是否既往病毒感染
	HasViralInfection bool `protobuf:"varint,7,opt,name=has_viral_infection,json=hasViralInfection,proto3" json:"has_viral_infection,omitempty"`
	// 是否处于生理期
	HasPhysiologicalPeriod bool `protobuf:"varint,8,opt,name=has_physiological_period,json=hasPhysiologicalPeriod,proto3" json:"has_physiological_period,omitempty"`
	// 是否处于排卵期
	HasOvulation bool `protobuf:"varint,9,opt,name=has_ovulation,json=hasOvulation,proto3" json:"has_ovulation,omitempty"`
	// 是否怀孕
	HasPregnant bool `protobuf:"varint,10,opt,name=has_pregnant,json=hasPregnant,proto3" json:"has_pregnant,omitempty"`
	// 是否处于哺乳期
	HasLactation bool `protobuf:"varint,11,opt,name=has_lactation,json=hasLactation,proto3" json:"has_lactation,omitempty"`
}

func (x *StressStateJudgmentModuleOutput) Reset() {
	*x = StressStateJudgmentModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StressStateJudgmentModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StressStateJudgmentModuleOutput) ProtoMessage() {}

func (x *StressStateJudgmentModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StressStateJudgmentModuleOutput.ProtoReflect.Descriptor instead.
func (*StressStateJudgmentModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{33}
}

func (x *StressStateJudgmentModuleOutput) GetHasStressState() bool {
	if x != nil {
		return x.HasStressState
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasDoneSports() bool {
	if x != nil {
		return x.HasDoneSports
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasDrunkWine() bool {
	if x != nil {
		return x.HasDrunkWine
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasHadCold() bool {
	if x != nil {
		return x.HasHadCold
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasRhinitisEpisode() bool {
	if x != nil {
		return x.HasRhinitisEpisode
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasAbdominalPain() bool {
	if x != nil {
		return x.HasAbdominalPain
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasViralInfection() bool {
	if x != nil {
		return x.HasViralInfection
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasPhysiologicalPeriod() bool {
	if x != nil {
		return x.HasPhysiologicalPeriod
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasOvulation() bool {
	if x != nil {
		return x.HasOvulation
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasPregnant() bool {
	if x != nil {
		return x.HasPregnant
	}
	return false
}

func (x *StressStateJudgmentModuleOutput) GetHasLactation() bool {
	if x != nil {
		return x.HasLactation
	}
	return false
}

// 风险分析模块（西医）
type HealthRiskAnalysisModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 综合风险分数
	SummaryIndex int32 `protobuf:"varint,1,opt,name=summary_index,json=summaryIndex,proto3" json:"summary_index,omitempty"`
	// 综合风险提示
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	// 疾病的 key 到分值的对应关系
	// 比如 key 为 RISK_123
	Risks map[string]int32 `protobuf:"bytes,3,rep,name=risks,proto3" json:"risks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 风险的体质类型
	// 这里的值为 key
	RiskType string `protobuf:"bytes,4,opt,name=risk_type,json=riskType,proto3" json:"risk_type,omitempty"`
}

func (x *HealthRiskAnalysisModuleOutput) Reset() {
	*x = HealthRiskAnalysisModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRiskAnalysisModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRiskAnalysisModuleOutput) ProtoMessage() {}

func (x *HealthRiskAnalysisModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRiskAnalysisModuleOutput.ProtoReflect.Descriptor instead.
func (*HealthRiskAnalysisModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{34}
}

func (x *HealthRiskAnalysisModuleOutput) GetSummaryIndex() int32 {
	if x != nil {
		return x.SummaryIndex
	}
	return 0
}

func (x *HealthRiskAnalysisModuleOutput) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *HealthRiskAnalysisModuleOutput) GetRisks() map[string]int32 {
	if x != nil {
		return x.Risks
	}
	return nil
}

func (x *HealthRiskAnalysisModuleOutput) GetRiskType() string {
	if x != nil {
		return x.RiskType
	}
	return ""
}

// JT 阶梯健康模块
type JtHealthModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 综合风险指数
	HealthRiskIndex int32 `protobuf:"varint,1,opt,name=health_risk_index,json=healthRiskIndex,proto3" json:"health_risk_index,omitempty"`
	// 健康年龄
	HealthAge int32 `protobuf:"varint,2,opt,name=health_age,json=healthAge,proto3" json:"health_age,omitempty"`
	// 体质说明
	PhysiqueExplain string `protobuf:"bytes,3,opt,name=physique_explain,json=physiqueExplain,proto3" json:"physique_explain,omitempty"`
	// 体质类型Key
	PhysiqueKey string `protobuf:"bytes,10,opt,name=physique_key,json=physiqueKey,proto3" json:"physique_key,omitempty"`
	// 健康报告综述Kty
	HealthSummaryKey string `protobuf:"bytes,11,opt,name=health_summary_key,json=healthSummaryKey,proto3" json:"health_summary_key,omitempty"`
	// 体质类型解释Key
	PhysiqueExplainKey string `protobuf:"bytes,12,opt,name=physique_explain_key,json=physiqueExplainKey,proto3" json:"physique_explain_key,omitempty"`
	// 心率
	HeartRate int32 `protobuf:"varint,13,opt,name=heart_rate,json=heartRate,proto3" json:"heart_rate,omitempty"`
	// 高血压
	Risk_1 int32 `protobuf:"varint,101,opt,name=risk_1,json=risk1,proto3" json:"risk_1,omitempty"`
	// 高血脂
	Risk_2 int32 `protobuf:"varint,102,opt,name=risk_2,json=risk2,proto3" json:"risk_2,omitempty"`
	// 高血糖
	Risk_3 int32 `protobuf:"varint,103,opt,name=risk_3,json=risk3,proto3" json:"risk_3,omitempty"`
	// 心血管
	Risk_4 int32 `protobuf:"varint,104,opt,name=risk_4,json=risk4,proto3" json:"risk_4,omitempty"`
	// 脑血管
	Risk_5 int32 `protobuf:"varint,105,opt,name=risk_5,json=risk5,proto3" json:"risk_5,omitempty"`
	// 肝负担
	Risk_6 int32 `protobuf:"varint,106,opt,name=risk_6,json=risk6,proto3" json:"risk_6,omitempty"`
	// 肾负担
	Risk_7 int32 `protobuf:"varint,107,opt,name=risk_7,json=risk7,proto3" json:"risk_7,omitempty"`
	// 肠胃消化
	Risk_8 int32 `protobuf:"varint,108,opt,name=risk_8,json=risk8,proto3" json:"risk_8,omitempty"`
	// 胃食管反流
	Risk_9 int32 `protobuf:"varint,109,opt,name=risk_9,json=risk9,proto3" json:"risk_9,omitempty"`
	// 免疫力
	Risk_10 int32 `protobuf:"varint,110,opt,name=risk_10,json=risk10,proto3" json:"risk_10,omitempty"`
	// 骨质疏松
	Risk_11 int32 `protobuf:"varint,111,opt,name=risk_11,json=risk11,proto3" json:"risk_11,omitempty"`
	// 压力
	Risk_12 int32 `protobuf:"varint,112,opt,name=risk_12,json=risk12,proto3" json:"risk_12,omitempty"`
	// 疲劳
	Risk_13 int32 `protobuf:"varint,113,opt,name=risk_13,json=risk13,proto3" json:"risk_13,omitempty"`
	// 睡眠质量
	Risk_14 int32 `protobuf:"varint,114,opt,name=risk_14,json=risk14,proto3" json:"risk_14,omitempty"`
	// 内分泌失调
	Risk_15 int32 `protobuf:"varint,115,opt,name=risk_15,json=risk15,proto3" json:"risk_15,omitempty"`
	// 过敏
	Risk_16 int32 `protobuf:"varint,116,opt,name=risk_16,json=risk16,proto3" json:"risk_16,omitempty"`
	// 感染
	Risk_17 int32 `protobuf:"varint,117,opt,name=risk_17,json=risk17,proto3" json:"risk_17,omitempty"`
	// 咽炎
	Risk_18 int32 `protobuf:"varint,118,opt,name=risk_18,json=risk18,proto3" json:"risk_18,omitempty"`
}

func (x *JtHealthModuleOutput) Reset() {
	*x = JtHealthModuleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JtHealthModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JtHealthModuleOutput) ProtoMessage() {}

func (x *JtHealthModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JtHealthModuleOutput.ProtoReflect.Descriptor instead.
func (*JtHealthModuleOutput) Descriptor() ([]byte, []int) {
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP(), []int{35}
}

func (x *JtHealthModuleOutput) GetHealthRiskIndex() int32 {
	if x != nil {
		return x.HealthRiskIndex
	}
	return 0
}

func (x *JtHealthModuleOutput) GetHealthAge() int32 {
	if x != nil {
		return x.HealthAge
	}
	return 0
}

func (x *JtHealthModuleOutput) GetPhysiqueExplain() string {
	if x != nil {
		return x.PhysiqueExplain
	}
	return ""
}

func (x *JtHealthModuleOutput) GetPhysiqueKey() string {
	if x != nil {
		return x.PhysiqueKey
	}
	return ""
}

func (x *JtHealthModuleOutput) GetHealthSummaryKey() string {
	if x != nil {
		return x.HealthSummaryKey
	}
	return ""
}

func (x *JtHealthModuleOutput) GetPhysiqueExplainKey() string {
	if x != nil {
		return x.PhysiqueExplainKey
	}
	return ""
}

func (x *JtHealthModuleOutput) GetHeartRate() int32 {
	if x != nil {
		return x.HeartRate
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_1() int32 {
	if x != nil {
		return x.Risk_1
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_2() int32 {
	if x != nil {
		return x.Risk_2
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_3() int32 {
	if x != nil {
		return x.Risk_3
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_4() int32 {
	if x != nil {
		return x.Risk_4
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_5() int32 {
	if x != nil {
		return x.Risk_5
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_6() int32 {
	if x != nil {
		return x.Risk_6
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_7() int32 {
	if x != nil {
		return x.Risk_7
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_8() int32 {
	if x != nil {
		return x.Risk_8
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_9() int32 {
	if x != nil {
		return x.Risk_9
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_10() int32 {
	if x != nil {
		return x.Risk_10
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_11() int32 {
	if x != nil {
		return x.Risk_11
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_12() int32 {
	if x != nil {
		return x.Risk_12
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_13() int32 {
	if x != nil {
		return x.Risk_13
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_14() int32 {
	if x != nil {
		return x.Risk_14
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_15() int32 {
	if x != nil {
		return x.Risk_15
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_16() int32 {
	if x != nil {
		return x.Risk_16
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_17() int32 {
	if x != nil {
		return x.Risk_17
	}
	return 0
}

func (x *JtHealthModuleOutput) GetRisk_18() int32 {
	if x != nil {
		return x.Risk_18
	}
	return 0
}

var File_jinmuhealth_platform_report_v1_report_modules_proto protoreflect.FileDescriptor

var file_jinmuhealth_platform_report_v1_report_modules_proto_rawDesc = []byte{
	0x0a, 0x33, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6a, 0x69,
	0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7d, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xc0, 0x01, 0x0a, 0x05, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x30,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x33,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x34,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x35,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x35, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x36,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x36, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x37,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x37, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x6f, 0x77,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0xbc, 0x01, 0x0a,
	0x18, 0x52, 0x69, 0x73, 0x6b, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x64, 0x69, 0x73,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0f, 0x64, 0x69, 0x73,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x1e, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63,
	0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a,
	0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22,
	0x5e, 0x0a, 0x1a, 0x44, 0x69, 0x72, 0x74, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x63, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a,
	0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22,
	0x98, 0x02, 0x0a, 0x20, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x65, 0x72,
	0x61, 0x70, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x66, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x66,
	0x30, 0x12, 0x2b, 0x0a, 0x02, 0x66, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x66, 0x31, 0x12, 0x2b,
	0x0a, 0x02, 0x66, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x66, 0x32, 0x12, 0x2b, 0x0a, 0x02, 0x66,
	0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x66, 0x33, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d,
	0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0xd7, 0x03, 0x0a, 0x1e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x60, 0x0a,
	0x0e, 0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x64,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x0d, 0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5d, 0x0a, 0x0d, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x64,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x0c, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79,
	0x0a, 0x17, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x5f, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x15, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x17, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x68, 0x65, 0x72, 0x61, 0x70, 0x79, 0x5f, 0x61, 0x64,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6a, 0x69, 0x6e,
	0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x65, 0x72, 0x61, 0x70, 0x79, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x15, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x65, 0x72, 0x61, 0x70, 0x79, 0x41, 0x64,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x19, 0x44, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x64, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x73, 0x22, 0x5c, 0x0a, 0x18, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x64, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x73, 0x22, 0x65, 0x0a, 0x21, 0x43, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x65, 0x0a, 0x21, 0x50, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x65, 0x72, 0x61, 0x70, 0x79, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a,
	0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22,
	0x3a, 0x0a, 0x1c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x57,
	0x61, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x1a, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x1c, 0x4d,
	0x65, 0x72, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x6d,
	0x65, 0x72, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x69,
	0x64, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x1b, 0x4d, 0x65, 0x72,
	0x69, 0x64, 0x69, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d,
	0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x45,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x31,
	0x30, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x33, 0x12, 0x40, 0x0a, 0x07, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a,
	0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x8b, 0x01,
	0x0a, 0x16, 0x46, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x31, 0x30, 0x34,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x34, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e,
	0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x1a,
	0x46, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x4d, 0x61, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x31,
	0x30, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x39, 0x12, 0x40, 0x0a, 0x07, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a,
	0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0xa1, 0x01,
	0x0a, 0x2c, 0x47, 0x79, 0x6e, 0x65, 0x63, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f,
	0x0a, 0x04, 0x66, 0x31, 0x30, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x31, 0x12,
	0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x73, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x47, 0x79, 0x6e, 0x65, 0x63, 0x6f, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6c, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66,
	0x31, 0x30, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x32, 0x12, 0x40, 0x0a, 0x07,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x8d,
	0x01, 0x0a, 0x18, 0x48, 0x6f, 0x72, 0x6d, 0x6f, 0x6e, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66,
	0x31, 0x30, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x36, 0x12, 0x40, 0x0a, 0x07,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x19, 0x55, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x66, 0x31, 0x30, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x30, 0x12, 0x40, 0x0a,
	0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22,
	0x8f, 0x01, 0x0a, 0x1e, 0x4d, 0x65, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x61, 0x6c, 0x53, 0x75, 0x6e,
	0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x6d, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x6d, 0x30, 0x12,
	0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x73, 0x22, 0x92, 0x01, 0x0a, 0x21, 0x49, 0x72, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x4d,
	0x65, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x6d, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x02, 0x6d, 0x31, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x1d, 0x44, 0x79, 0x73, 0x6d, 0x65,
	0x6e, 0x6f, 0x72, 0x72, 0x68, 0x65, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x02, 0x6d, 0x32, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x31, 0x30, 0x35, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x35, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d,
	0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x4c,
	0x79, 0x6d, 0x70, 0x68, 0x61, 0x74, 0x69, 0x63, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x31,
	0x30, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x37, 0x12, 0x40, 0x0a, 0x07, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a,
	0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0xba, 0x01,
	0x0a, 0x18, 0x42, 0x72, 0x65, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x6d, 0x33,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x02, 0x6d, 0x33, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x31, 0x30, 0x38, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x66, 0x31, 0x30, 0x38, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d,
	0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x5c, 0x0a, 0x18, 0x42, 0x72,
	0x65, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x63, 0x0a, 0x1f, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a,
	0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x54, 0x0a,
	0x10, 0x54, 0x69, 0x70, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x73, 0x22, 0xf2, 0x03, 0x0a, 0x1f, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x44,
	0x6f, 0x6e, 0x65, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x73,
	0x5f, 0x64, 0x72, 0x75, 0x6e, 0x6b, 0x5f, 0x77, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x44, 0x72, 0x75, 0x6e, 0x6b, 0x57, 0x69, 0x6e, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x68, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x48, 0x61, 0x64, 0x43, 0x6f, 0x6c,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x68, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x73, 0x5f, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x68, 0x61, 0x73, 0x52, 0x68, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x73, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x62, 0x64, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x68, 0x61, 0x73, 0x41, 0x62, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x69,
	0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x68, 0x61, 0x73, 0x56, 0x69, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x18, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x68, 0x61, 0x73, 0x50, 0x68, 0x79, 0x73, 0x69, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68,
	0x61, 0x73, 0x5f, 0x6f, 0x76, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x4f, 0x76, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x67, 0x6e, 0x61, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x67, 0x6e,
	0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x61, 0x63, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x4c,
	0x61, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x02, 0x0a, 0x1e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x69, 0x73, 0x6b, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x5f, 0x0a, 0x05, 0x72, 0x69,
	0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x6a, 0x69, 0x6e, 0x6d,
	0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x69, 0x73, 0x6b, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x69, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x69, 0x73, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xde, 0x05, 0x0a, 0x14, 0x4a, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x69,
	0x73, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x41, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x71, 0x75, 0x65, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x79, 0x73, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x79, 0x73, 0x69, 0x71, 0x75,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x68, 0x79, 0x73, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x68, 0x79, 0x73, 0x69, 0x71, 0x75, 0x65, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x69,
	0x73, 0x6b, 0x5f, 0x32, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b,
	0x32, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x33, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x69, 0x73, 0x6b,
	0x5f, 0x34, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x34, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x35, 0x18, 0x69, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x69, 0x73, 0x6b, 0x35, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x36,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x36, 0x12, 0x15, 0x0a,
	0x06, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x37, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72,
	0x69, 0x73, 0x6b, 0x37, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x38, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x38, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x69, 0x73, 0x6b, 0x5f, 0x39, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x73,
	0x6b, 0x39, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31, 0x30, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x31, 0x30, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x69, 0x73, 0x6b, 0x5f, 0x31, 0x31, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69,
	0x73, 0x6b, 0x31, 0x31, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31, 0x32, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x31, 0x32, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31, 0x33, 0x18, 0x71, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x69, 0x73, 0x6b, 0x31, 0x33, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31,
	0x34, 0x18, 0x72, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x31, 0x34, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31, 0x35, 0x18, 0x73, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x31, 0x35, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b,
	0x5f, 0x31, 0x36, 0x18, 0x74, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x31,
	0x36, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x31, 0x37, 0x18, 0x75, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73, 0x6b, 0x31, 0x37, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x73, 0x6b, 0x5f, 0x31, 0x38, 0x18, 0x76, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x69, 0x73,
	0x6b, 0x31, 0x38, 0x42, 0xd0, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x69, 0x6e, 0x6d,
	0x75, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x69, 0x6e,
	0x6d, 0x75, 0x6b, 0x65, 0x6a, 0x69, 0x2f, 0x6a, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x4a, 0x50, 0x52, 0xaa, 0x02, 0x1e, 0x4a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1e, 0x4a, 0x69, 0x6e, 0x6d, 0x75, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescOnce sync.Once
	file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescData = file_jinmuhealth_platform_report_v1_report_modules_proto_rawDesc
)

func file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescGZIP() []byte {
	file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescOnce.Do(func() {
		file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescData = protoimpl.X.CompressGZIP(file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescData)
	})
	return file_jinmuhealth_platform_report_v1_report_modules_proto_rawDescData
}

var file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_jinmuhealth_platform_report_v1_report_modules_proto_goTypes = []interface{}{
	(*ReportModuleInput)(nil),                            // 0: jinmuhealth.platform.report.v1.ReportModuleInput
	(*ReportModuleResult)(nil),                           // 1: jinmuhealth.platform.report.v1.ReportModuleResult
	(*CInfo)(nil),                                        // 2: jinmuhealth.platform.report.v1.CInfo
	(*Lookup)(nil),                                       // 3: jinmuhealth.platform.report.v1.Lookup
	(*HeartRateModuleOutput)(nil),                        // 4: jinmuhealth.platform.report.v1.HeartRateModuleOutput
	(*RiskEstimateModuleOutput)(nil),                     // 5: jinmuhealth.platform.report.v1.RiskEstimateModuleOutput
	(*PhysicalDialecticsModuleOutput)(nil),               // 6: jinmuhealth.platform.report.v1.PhysicalDialecticsModuleOutput
	(*DirtyDialecticModuleOutput)(nil),                   // 7: jinmuhealth.platform.report.v1.DirtyDialecticModuleOutput
	(*PhysicalTherapyIndexModuleOutput)(nil),             // 8: jinmuhealth.platform.report.v1.PhysicalTherapyIndexModuleOutput
	(*ConditioningAdviceModuleOutput)(nil),               // 9: jinmuhealth.platform.report.v1.ConditioningAdviceModuleOutput
	(*DietaryAdviceModuleOutput)(nil),                    // 10: jinmuhealth.platform.report.v1.DietaryAdviceModuleOutput
	(*SportsAdviceModuleOutput)(nil),                     // 11: jinmuhealth.platform.report.v1.SportsAdviceModuleOutput
	(*ChineseMedicineAdviceModuleOutput)(nil),            // 12: jinmuhealth.platform.report.v1.ChineseMedicineAdviceModuleOutput
	(*PhysicalTherapyAdviceModuleOutput)(nil),            // 13: jinmuhealth.platform.report.v1.PhysicalTherapyAdviceModuleOutput
	(*PartialPulseWaveModuleOutput)(nil),                 // 14: jinmuhealth.platform.report.v1.PartialPulseWaveModuleOutput
	(*MeridianBarChartModuleOutput)(nil),                 // 15: jinmuhealth.platform.report.v1.MeridianBarChartModuleOutput
	(*MeridianExplainModuleOutput)(nil),                  // 16: jinmuhealth.platform.report.v1.MeridianExplainModuleOutput
	(*EmotionalHealthModuleOutput)(nil),                  // 17: jinmuhealth.platform.report.v1.EmotionalHealthModuleOutput
	(*FacialSkinModuleOutput)(nil),                       // 18: jinmuhealth.platform.report.v1.FacialSkinModuleOutput
	(*FacialSkinMaleModuleOutput)(nil),                   // 19: jinmuhealth.platform.report.v1.FacialSkinMaleModuleOutput
	(*GynecologicalDiseaseRiskEstimateModuleOutput)(nil), // 20: jinmuhealth.platform.report.v1.GynecologicalDiseaseRiskEstimateModuleOutput
	(*GynecologicalInflammationModuleOutput)(nil),        // 21: jinmuhealth.platform.report.v1.GynecologicalInflammationModuleOutput
	(*HormoneLevelModuleOutput)(nil),                     // 22: jinmuhealth.platform.report.v1.HormoneLevelModuleOutput
	(*UterineHealthModuleOutput)(nil),                    // 23: jinmuhealth.platform.report.v1.UterineHealthModuleOutput
	(*MenstrualSunflowerModuleOutput)(nil),               // 24: jinmuhealth.platform.report.v1.MenstrualSunflowerModuleOutput
	(*IrregularMenstruationModuleOutput)(nil),            // 25: jinmuhealth.platform.report.v1.IrregularMenstruationModuleOutput
	(*DysmenorrheaIndexModuleOutput)(nil),                // 26: jinmuhealth.platform.report.v1.DysmenorrheaIndexModuleOutput
	(*ReproductiveAgeModuleOutput)(nil),                  // 27: jinmuhealth.platform.report.v1.ReproductiveAgeModuleOutput
	(*LymphaticHealthModuleOutput)(nil),                  // 28: jinmuhealth.platform.report.v1.LymphaticHealthModuleOutput
	(*BreastHealthModuleOutput)(nil),                     // 29: jinmuhealth.platform.report.v1.BreastHealthModuleOutput
	(*BreastCancerModuleOutput)(nil),                     // 30: jinmuhealth.platform.report.v1.BreastCancerModuleOutput
	(*MeasurementJudgmentModuleOutput)(nil),              // 31: jinmuhealth.platform.report.v1.MeasurementJudgmentModuleOutput
	(*TipsModuleOutput)(nil),                             // 32: jinmuhealth.platform.report.v1.TipsModuleOutput
	(*StressStateJudgmentModuleOutput)(nil),              // 33: jinmuhealth.platform.report.v1.StressStateJudgmentModuleOutput
	(*HealthRiskAnalysisModuleOutput)(nil),               // 34: jinmuhealth.platform.report.v1.HealthRiskAnalysisModuleOutput
	(*JtHealthModuleOutput)(nil),                         // 35: jinmuhealth.platform.report.v1.JtHealthModuleOutput
	nil,                                                  // 36: jinmuhealth.platform.report.v1.ReportModuleInput.ParamsEntry
	nil,                                                  // 37: jinmuhealth.platform.report.v1.HealthRiskAnalysisModuleOutput.RisksEntry
	(*anypb.Any)(nil),                                    // 38: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),                        // 39: google.protobuf.Timestamp
	(*wrapperspb.Int32Value)(nil),                        // 40: google.protobuf.Int32Value
}
var file_jinmuhealth_platform_report_v1_report_modules_proto_depIdxs = []int32{
	36, // 0: jinmuhealth.platform.report.v1.ReportModuleInput.params:type_name -> jinmuhealth.platform.report.v1.ReportModuleInput.ParamsEntry
	38, // 1: jinmuhealth.platform.report.v1.ReportModuleResult.result:type_name -> google.protobuf.Any
	39, // 2: jinmuhealth.platform.report.v1.CInfo.test_time:type_name -> google.protobuf.Timestamp
	3,  // 3: jinmuhealth.platform.report.v1.RiskEstimateModuleOutput.disease_estimate:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 4: jinmuhealth.platform.report.v1.RiskEstimateModuleOutput.prompt_message:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 5: jinmuhealth.platform.report.v1.PhysicalDialecticsModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 6: jinmuhealth.platform.report.v1.DirtyDialecticModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 7: jinmuhealth.platform.report.v1.PhysicalTherapyIndexModuleOutput.f0:type_name -> google.protobuf.Int32Value
	40, // 8: jinmuhealth.platform.report.v1.PhysicalTherapyIndexModuleOutput.f1:type_name -> google.protobuf.Int32Value
	40, // 9: jinmuhealth.platform.report.v1.PhysicalTherapyIndexModuleOutput.f2:type_name -> google.protobuf.Int32Value
	40, // 10: jinmuhealth.platform.report.v1.PhysicalTherapyIndexModuleOutput.f3:type_name -> google.protobuf.Int32Value
	3,  // 11: jinmuhealth.platform.report.v1.PhysicalTherapyIndexModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	10, // 12: jinmuhealth.platform.report.v1.ConditioningAdviceModuleOutput.dietary_advice:type_name -> jinmuhealth.platform.report.v1.DietaryAdviceModuleOutput
	11, // 13: jinmuhealth.platform.report.v1.ConditioningAdviceModuleOutput.sports_advice:type_name -> jinmuhealth.platform.report.v1.SportsAdviceModuleOutput
	12, // 14: jinmuhealth.platform.report.v1.ConditioningAdviceModuleOutput.chinese_medicine_advice:type_name -> jinmuhealth.platform.report.v1.ChineseMedicineAdviceModuleOutput
	13, // 15: jinmuhealth.platform.report.v1.ConditioningAdviceModuleOutput.physical_therapy_advice:type_name -> jinmuhealth.platform.report.v1.PhysicalTherapyAdviceModuleOutput
	3,  // 16: jinmuhealth.platform.report.v1.DietaryAdviceModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 17: jinmuhealth.platform.report.v1.SportsAdviceModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 18: jinmuhealth.platform.report.v1.ChineseMedicineAdviceModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 19: jinmuhealth.platform.report.v1.PhysicalTherapyAdviceModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	2,  // 20: jinmuhealth.platform.report.v1.MeridianBarChartModuleOutput.meridian_value:type_name -> jinmuhealth.platform.report.v1.CInfo
	3,  // 21: jinmuhealth.platform.report.v1.MeridianExplainModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 22: jinmuhealth.platform.report.v1.EmotionalHealthModuleOutput.f103:type_name -> google.protobuf.Int32Value
	3,  // 23: jinmuhealth.platform.report.v1.EmotionalHealthModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 24: jinmuhealth.platform.report.v1.FacialSkinModuleOutput.f104:type_name -> google.protobuf.Int32Value
	3,  // 25: jinmuhealth.platform.report.v1.FacialSkinModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 26: jinmuhealth.platform.report.v1.FacialSkinMaleModuleOutput.f109:type_name -> google.protobuf.Int32Value
	3,  // 27: jinmuhealth.platform.report.v1.FacialSkinMaleModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 28: jinmuhealth.platform.report.v1.GynecologicalDiseaseRiskEstimateModuleOutput.f101:type_name -> google.protobuf.Int32Value
	3,  // 29: jinmuhealth.platform.report.v1.GynecologicalDiseaseRiskEstimateModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 30: jinmuhealth.platform.report.v1.GynecologicalInflammationModuleOutput.f102:type_name -> google.protobuf.Int32Value
	3,  // 31: jinmuhealth.platform.report.v1.GynecologicalInflammationModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 32: jinmuhealth.platform.report.v1.HormoneLevelModuleOutput.f106:type_name -> google.protobuf.Int32Value
	3,  // 33: jinmuhealth.platform.report.v1.HormoneLevelModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 34: jinmuhealth.platform.report.v1.UterineHealthModuleOutput.f100:type_name -> google.protobuf.Int32Value
	3,  // 35: jinmuhealth.platform.report.v1.UterineHealthModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 36: jinmuhealth.platform.report.v1.MenstrualSunflowerModuleOutput.m0:type_name -> google.protobuf.Int32Value
	3,  // 37: jinmuhealth.platform.report.v1.MenstrualSunflowerModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 38: jinmuhealth.platform.report.v1.IrregularMenstruationModuleOutput.m1:type_name -> google.protobuf.Int32Value
	3,  // 39: jinmuhealth.platform.report.v1.IrregularMenstruationModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 40: jinmuhealth.platform.report.v1.DysmenorrheaIndexModuleOutput.m2:type_name -> google.protobuf.Int32Value
	3,  // 41: jinmuhealth.platform.report.v1.DysmenorrheaIndexModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 42: jinmuhealth.platform.report.v1.ReproductiveAgeModuleOutput.f105:type_name -> google.protobuf.Int32Value
	3,  // 43: jinmuhealth.platform.report.v1.ReproductiveAgeModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 44: jinmuhealth.platform.report.v1.LymphaticHealthModuleOutput.f107:type_name -> google.protobuf.Int32Value
	3,  // 45: jinmuhealth.platform.report.v1.LymphaticHealthModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	40, // 46: jinmuhealth.platform.report.v1.BreastHealthModuleOutput.m3:type_name -> google.protobuf.Int32Value
	40, // 47: jinmuhealth.platform.report.v1.BreastHealthModuleOutput.f108:type_name -> google.protobuf.Int32Value
	3,  // 48: jinmuhealth.platform.report.v1.BreastHealthModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 49: jinmuhealth.platform.report.v1.BreastCancerModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 50: jinmuhealth.platform.report.v1.MeasurementJudgmentModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	3,  // 51: jinmuhealth.platform.report.v1.TipsModuleOutput.lookups:type_name -> jinmuhealth.platform.report.v1.Lookup
	37, // 52: jinmuhealth.platform.report.v1.HealthRiskAnalysisModuleOutput.risks:type_name -> jinmuhealth.platform.report.v1.HealthRiskAnalysisModuleOutput.RisksEntry
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_jinmuhealth_platform_report_v1_report_modules_proto_init() }
func file_jinmuhealth_platform_report_v1_report_modules_proto_init() {
	if File_jinmuhealth_platform_report_v1_report_modules_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportModuleInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportModuleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartRateModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskEstimateModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalDialecticsModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirtyDialecticModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalTherapyIndexModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditioningAdviceModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DietaryAdviceModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportsAdviceModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChineseMedicineAdviceModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalTherapyAdviceModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialPulseWaveModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeridianBarChartModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeridianExplainModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmotionalHealthModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacialSkinModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacialSkinMaleModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GynecologicalDiseaseRiskEstimateModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GynecologicalInflammationModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HormoneLevelModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UterineHealthModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenstrualSunflowerModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IrregularMenstruationModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DysmenorrheaIndexModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReproductiveAgeModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LymphaticHealthModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreastHealthModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreastCancerModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementJudgmentModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TipsModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StressStateJudgmentModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRiskAnalysisModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JtHealthModuleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jinmuhealth_platform_report_v1_report_modules_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jinmuhealth_platform_report_v1_report_modules_proto_goTypes,
		DependencyIndexes: file_jinmuhealth_platform_report_v1_report_modules_proto_depIdxs,
		MessageInfos:      file_jinmuhealth_platform_report_v1_report_modules_proto_msgTypes,
	}.Build()
	File_jinmuhealth_platform_report_v1_report_modules_proto = out.File
	file_jinmuhealth_platform_report_v1_report_modules_proto_rawDesc = nil
	file_jinmuhealth_platform_report_v1_report_modules_proto_goTypes = nil
	file_jinmuhealth_platform_report_v1_report_modules_proto_depIdxs = nil
}
