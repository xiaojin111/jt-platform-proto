// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: jinmuhealth/platform/report/v1/report_api.proto

package reportv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/jinmukeji/jt-platform-proto/gen/go/jinmuhealth/platform/annotation/v1"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for ReportAPI service

func NewReportAPIEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for ReportAPI service

type ReportAPIService interface {
	// SubmitPulseTest 提交采样数据.
	SubmitPulseTest(ctx context.Context, in *SubmitPulseTestRequest, opts ...client.CallOption) (*SubmitPulseTestResponse, error)
	// GetRawData 获取原始脉搏波数据
	GetRawData(ctx context.Context, in *GetRawDataRequest, opts ...client.CallOption) (*GetRawDataResponse, error)
	// GetReport 获得测量分析报告（含问答）.
	GetReport(ctx context.Context, in *GetReportRequest, opts ...client.CallOption) (*GetReportResponse, error)
	// SearchReports 获得历史报告记录.
	SearchReports(ctx context.Context, in *SearchReportsRequest, opts ...client.CallOption) (*SearchReportsResponse, error)
	// GetWeeklyTrend 获得周趋势.
	GetWeeklyTrend(ctx context.Context, in *GetWeeklyTrendRequest, opts ...client.CallOption) (*GetWeeklyTrendResponse, error)
	// GetMonthlyTrend 获得月趋势.
	GetMonthlyTrend(ctx context.Context, in *GetMonthlyTrendRequest, opts ...client.CallOption) (*GetMonthlyTrendResponse, error)
	// GetWeeklyReport 获得周报.
	GetWeeklyReport(ctx context.Context, in *GetWeeklyReportRequest, opts ...client.CallOption) (*GetWeeklyReportResponse, error)
	// GetMonthlyReport 获得月报.
	GetMonthlyReport(ctx context.Context, in *GetMonthlyReportRequest, opts ...client.CallOption) (*GetMonthlyReportResponse, error)
}

type reportAPIService struct {
	c    client.Client
	name string
}

func NewReportAPIService(name string, c client.Client) ReportAPIService {
	return &reportAPIService{
		c:    c,
		name: name,
	}
}

func (c *reportAPIService) SubmitPulseTest(ctx context.Context, in *SubmitPulseTestRequest, opts ...client.CallOption) (*SubmitPulseTestResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.SubmitPulseTest", in)
	out := new(SubmitPulseTestResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) GetRawData(ctx context.Context, in *GetRawDataRequest, opts ...client.CallOption) (*GetRawDataResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.GetRawData", in)
	out := new(GetRawDataResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) GetReport(ctx context.Context, in *GetReportRequest, opts ...client.CallOption) (*GetReportResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.GetReport", in)
	out := new(GetReportResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) SearchReports(ctx context.Context, in *SearchReportsRequest, opts ...client.CallOption) (*SearchReportsResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.SearchReports", in)
	out := new(SearchReportsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) GetWeeklyTrend(ctx context.Context, in *GetWeeklyTrendRequest, opts ...client.CallOption) (*GetWeeklyTrendResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.GetWeeklyTrend", in)
	out := new(GetWeeklyTrendResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) GetMonthlyTrend(ctx context.Context, in *GetMonthlyTrendRequest, opts ...client.CallOption) (*GetMonthlyTrendResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.GetMonthlyTrend", in)
	out := new(GetMonthlyTrendResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) GetWeeklyReport(ctx context.Context, in *GetWeeklyReportRequest, opts ...client.CallOption) (*GetWeeklyReportResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.GetWeeklyReport", in)
	out := new(GetWeeklyReportResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportAPIService) GetMonthlyReport(ctx context.Context, in *GetMonthlyReportRequest, opts ...client.CallOption) (*GetMonthlyReportResponse, error) {
	req := c.c.NewRequest(c.name, "ReportAPI.GetMonthlyReport", in)
	out := new(GetMonthlyReportResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReportAPI service

type ReportAPIHandler interface {
	// SubmitPulseTest 提交采样数据.
	SubmitPulseTest(context.Context, *SubmitPulseTestRequest, *SubmitPulseTestResponse) error
	// GetRawData 获取原始脉搏波数据
	GetRawData(context.Context, *GetRawDataRequest, *GetRawDataResponse) error
	// GetReport 获得测量分析报告（含问答）.
	GetReport(context.Context, *GetReportRequest, *GetReportResponse) error
	// SearchReports 获得历史报告记录.
	SearchReports(context.Context, *SearchReportsRequest, *SearchReportsResponse) error
	// GetWeeklyTrend 获得周趋势.
	GetWeeklyTrend(context.Context, *GetWeeklyTrendRequest, *GetWeeklyTrendResponse) error
	// GetMonthlyTrend 获得月趋势.
	GetMonthlyTrend(context.Context, *GetMonthlyTrendRequest, *GetMonthlyTrendResponse) error
	// GetWeeklyReport 获得周报.
	GetWeeklyReport(context.Context, *GetWeeklyReportRequest, *GetWeeklyReportResponse) error
	// GetMonthlyReport 获得月报.
	GetMonthlyReport(context.Context, *GetMonthlyReportRequest, *GetMonthlyReportResponse) error
}

func RegisterReportAPIHandler(s server.Server, hdlr ReportAPIHandler, opts ...server.HandlerOption) error {
	type reportAPI interface {
		SubmitPulseTest(ctx context.Context, in *SubmitPulseTestRequest, out *SubmitPulseTestResponse) error
		GetRawData(ctx context.Context, in *GetRawDataRequest, out *GetRawDataResponse) error
		GetReport(ctx context.Context, in *GetReportRequest, out *GetReportResponse) error
		SearchReports(ctx context.Context, in *SearchReportsRequest, out *SearchReportsResponse) error
		GetWeeklyTrend(ctx context.Context, in *GetWeeklyTrendRequest, out *GetWeeklyTrendResponse) error
		GetMonthlyTrend(ctx context.Context, in *GetMonthlyTrendRequest, out *GetMonthlyTrendResponse) error
		GetWeeklyReport(ctx context.Context, in *GetWeeklyReportRequest, out *GetWeeklyReportResponse) error
		GetMonthlyReport(ctx context.Context, in *GetMonthlyReportRequest, out *GetMonthlyReportResponse) error
	}
	type ReportAPI struct {
		reportAPI
	}
	h := &reportAPIHandler{hdlr}
	return s.Handle(s.NewHandler(&ReportAPI{h}, opts...))
}

type reportAPIHandler struct {
	ReportAPIHandler
}

func (h *reportAPIHandler) SubmitPulseTest(ctx context.Context, in *SubmitPulseTestRequest, out *SubmitPulseTestResponse) error {
	return h.ReportAPIHandler.SubmitPulseTest(ctx, in, out)
}

func (h *reportAPIHandler) GetRawData(ctx context.Context, in *GetRawDataRequest, out *GetRawDataResponse) error {
	return h.ReportAPIHandler.GetRawData(ctx, in, out)
}

func (h *reportAPIHandler) GetReport(ctx context.Context, in *GetReportRequest, out *GetReportResponse) error {
	return h.ReportAPIHandler.GetReport(ctx, in, out)
}

func (h *reportAPIHandler) SearchReports(ctx context.Context, in *SearchReportsRequest, out *SearchReportsResponse) error {
	return h.ReportAPIHandler.SearchReports(ctx, in, out)
}

func (h *reportAPIHandler) GetWeeklyTrend(ctx context.Context, in *GetWeeklyTrendRequest, out *GetWeeklyTrendResponse) error {
	return h.ReportAPIHandler.GetWeeklyTrend(ctx, in, out)
}

func (h *reportAPIHandler) GetMonthlyTrend(ctx context.Context, in *GetMonthlyTrendRequest, out *GetMonthlyTrendResponse) error {
	return h.ReportAPIHandler.GetMonthlyTrend(ctx, in, out)
}

func (h *reportAPIHandler) GetWeeklyReport(ctx context.Context, in *GetWeeklyReportRequest, out *GetWeeklyReportResponse) error {
	return h.ReportAPIHandler.GetWeeklyReport(ctx, in, out)
}

func (h *reportAPIHandler) GetMonthlyReport(ctx context.Context, in *GetMonthlyReportRequest, out *GetMonthlyReportResponse) error {
	return h.ReportAPIHandler.GetMonthlyReport(ctx, in, out)
}
